<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetProjects.DataVisualization.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1">
            <summary>
            Aggregated observable collection.
            </summary>
            <typeparam name="T">The type of the items in the observable collections.
            </typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of an aggregated observable collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollectionsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Rebuilds the list if a collection changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollectionCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Synchronizes the collection with changes made in a child collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.GetStartingIndexOfCollectionAtIndex(System.Int32)">
            <summary>
            Returns the starting index of a collection in the aggregate
            collection.
            </summary>
            <param name="index">The starting index of a collection.</param>
            <returns>The starting index of the collection in the aggregate 
            collection.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.Rebuild">
            <summary>
            Rebuild the list in the correct order when a child collection 
            changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollections">
            <summary>
            Gets child collections of the aggregated collection.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AnimationSequence">
            <summary>
            Specifies the supported animation sequences.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.Simultaneous">
            <summary>
            Animates all of the data points simultaneously.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.FirstToLast">
            <summary>
            Animates the data points from first to last.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.LastToFirst">
            <summary>
            Animates the data points from last to first.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Axis">
            <summary>
            An axis class used to determine the plot area coordinate of values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.Location">
            <summary>
            Gets or sets the axis location.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Axis.LocationProperty">
            <summary>
            Identifies the Location dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnLocationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LocationProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its Location.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnLocationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisLocation,System.Windows.Controls.DataVisualization.Charting.AxisLocation)">
            <summary>
            LocationProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Axis.LocationChanged">
            <summary>
            This event is raised when the location property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.DependentAxes">
            <summary>
            Gets the list of child axes belonging to this axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.Orientation">
            <summary>
            Gets or sets the orientation of the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Axis.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnOrientationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisOrientation,System.Windows.Controls.DataVisualization.Charting.AxisOrientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Axis.OrientationChanged">
            <summary>
            This event is raised when the Orientation property is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnInvalidated(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the invalidated event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.RegisteredListeners">
            <summary>
            Gets or the collection of series that are using the Axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether the axis can plot a value.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether the axis can plot a value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.#ctor">
            <summary>
            Instantiates a new instance of the Axis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnChildAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Child axes collection changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnDependentAxesCollectionChanged">
            <summary>
            Child axes collection changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.RegisteredListenersCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This event is raised when the registered listeners collection is
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            This method is invoked when a series is registered.
            </summary>
            <param name="series">The series that has been registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            This method is invoked when a series is unregistered.
            </summary>
            <param name="series">The series that has been unregistered.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType">
            <summary>
            Specifies an interval type.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Auto">
            <summary>
            Automatically determined by the ISeriesHost control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Number">
            <summary>
            The interval type is numerical.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Years">
            <summary>
            The interval type is years.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Months">
            <summary>
            The interval type is months.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Weeks">
            <summary>
            The interval type is weeks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Days">
            <summary>
            The interval type is days.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Hours">
            <summary>
            The interval type is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Minutes">
            <summary>
            The interval type is minutes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Seconds">
            <summary>
            The interval type is seconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Milliseconds">
            <summary>
            The interval type is milliseconds.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisLabel">
            <summary>
            A label used to display data in an axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AxisLabel.StringFormat">
            <summary>
            Gets or sets the text string format.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLabel.StringFormatProperty">
            <summary>
            Identifies the StringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.OnStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StringFormatProperty property changed handler.
            </summary>
            <param name="d">AxisLabel that changed its StringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.OnStringFormatPropertyChanged(System.String)">
            <summary>
            StringFormatProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AxisLabel.FormattedContent">
            <summary>
            Gets the formatted content property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLabel.FormattedContentProperty">
            <summary>
            Identifies the FormattedContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.#cctor">
            <summary>
            Initializes the static members of the AxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the AxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.UpdateFormattedContent">
            <summary>
            Updates the formatted text.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisLocation">
            <summary>
            Axis position.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Auto">
            <summary>
            Location is determined automatically.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Left">
            <summary>
            Left in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Top">
            <summary>
            Top in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Right">
            <summary>
            Right in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Bottom">
            <summary>
            Bottom of the series host area.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisOrientation">
            <summary>
            Specifies the orientation of an axis.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.None">
            <summary>
            Orientation is automatically set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.X">
            <summary>
            Indicates the axis plots along the X axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.Y">
            <summary>
            Indicates the axis plots along the Y axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.CategoryAxis">
            <summary>
            An axis that displays categories.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis._majorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis._labelPool">
            <summary>
            A pool of labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.SortOrder">
            <summary>
            Gets or sets the sort order used for the categories.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.SortOrderProperty">
            <summary>
            Identifies the SortOrder dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnSortOrderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SortOrderProperty property changed handler.
            </summary>
            <param name="d">CategoryAxis that changed its SortOrder.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnSortOrderPropertyChanged">
            <summary>
            SortOrderProperty property changed handler.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.Categories">
            <summary>
            Gets or sets a list of categories to display.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GridLineCoordinatesToDisplay">
            <summary>
            Gets or sets the grid line coordinates to display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.#ctor">
            <summary>
            Instantiates a new instance of the CategoryAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            Updates categories when a series is registered.
            </summary>
            <param name="series">The series to be registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            Updates categories when a series is unregistered.
            </summary>
            <param name="series">The series to be unregistered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetPlotAreaCoordinateRange(System.Object)">
            <summary>
            Returns range of coordinates for a given category.
            </summary>
            <param name="category">The category to return the range for.</param>
            <returns>The range of coordinates corresponding to the category.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetCategoryAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the category at a given coordinate.
            </summary>
            <param name="position">The plot area position.</param>
            <returns>The category at the given plot area position.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.DataChanged(System.Windows.Controls.DataVisualization.Charting.IDataProvider,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Updates the categories in response to an update from a registered
            axis data provider.
            </summary>
            <param name="dataProvider">The category axis information
            provider.</param>
            <param name="data">A sequence of categories.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.UpdateCategories">
            <summary>
            Updates the list of categories.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns the major axis grid line coordinates.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.CreateAndPrepareAxisLabel(System.Object)">
            <summary>
            Creates and prepares a new axis label.
            </summary>
            <param name="value">The axis label value.</param>
            <returns>The axis label content control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.RenderOriented(System.Windows.Size)">
            <summary>
            Renders as an oriented axis.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can be plotted on the
            axis.
            </summary>
            <param name="value">A value which may or may not be able to be
            plotted.</param>
            <returns>A value indicating whether a value can be plotted on the
            axis.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder">
            <summary>
            The sort order to use when sorting categories.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.None">
            <summary>
            No sort order.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.Ascending">
            <summary>
            Ascending sort order.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.Descending">
            <summary>
            Descending sort order.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMaximum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMaximumProperty">
            <summary>
            Identifies the ActualMaximum dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMinimum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMinimumProperty">
            <summary>
            Identifies the ActualMinimum dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Maximum">
            <summary>
            Gets or sets the maximum value plotted on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMaximumPropertyChanged(System.Nullable{System.DateTime})">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Minimum">
            <summary>
            Gets or sets the minimum value to plot on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMinimumPropertyChanged(System.Nullable{System.DateTime})">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Interval">
            <summary>
            Gets or sets the axis interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Interval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalPropertyChanged">
            <summary>
            IntervalProperty property changed handler.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalProperty">
            <summary>
            Identifies the ActualInterval dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets the interval to use for the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalTypeProperty">
            <summary>
            Identifies the InternalIntervalType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis that changed its InternalIntervalType.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalTypePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalType">
            <summary>
            Gets or sets the actual interval type.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalTypeProperty">
            <summary>
            Identifies the ActualIntervalType dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.#ctor">
            <summary>
            Instantiates a new instance of the DateTimeAxis2 class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CreateAxisLabel">
            <summary>
            Creates a new instance of the DateTimeAxisLabel class.
            </summary>
            <returns>Returns  a new instance of the DateTimeAxisLabel class.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.PrepareAxisLabel(System.Windows.Controls.Control,System.Object)">
            <summary>
            Prepares an instance of the DateTimeAxisLabel class by setting its
            IntervalType property.
            </summary>
            <param name="label">An instance of the DateTimeAxisLabel class.
            </param>
            <param name="dataContext">The data context to assign to the label.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualDateTimeRange">
            <summary>
            Gets the actual range of DateTime values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the typed actual maximum and minimum properties when the
            actual range changes.
            </summary>
            <param name="range">The actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can plot.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether a value can plot.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetPlotAreaCoordinate(System.Object,System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="currentRange">The range to use determine the coordinate.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.DateTime},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="currentRange">The range to use determine the coordinate.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CalculateActualInterval(System.Windows.Size)">
            <summary>
            Returns the actual interval to use to determine which values are 
            displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The actual interval to use to determine which values are 
            displayed in the axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetMajorAxisValues(System.Windows.Size)">
            <summary>
            Returns a sequence of major values.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of major values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to create major tick marks for.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to create major tick marks for.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IncrementDateTime(System.DateTime,System.Double)">
            <summary>
            This method accepts a date time and increments it.
            </summary>
            <param name="date">A date time.</param>
            <param name="interval">The interval used to increment the date time.
            </param>
            <returns>The new date time.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.AlignIntervalStart(System.DateTime,System.Double,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            Adjusts the beginning of the first interval depending on the type and size.
            </summary>
            <param name="start">Original start point.</param>
            <param name="intervalSize">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <returns>
            Adjusted interval start position.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The position.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CalculateDateTimeInterval(System.DateTime,System.DateTime,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType@,System.Windows.Size)">
            <summary>
            Recalculates a DateTime interval obtained from maximum and minimum.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <param name="type">Date time interval type.</param>
            <param name="availableSize">The available size.</param>
            <returns>Auto Interval.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the actual range to ensure that it is never set to an
            empty range.
            </summary>
            <param name="range">The range to override.</param>
            <returns>The overridden range.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel">
            <summary>
            An axis label for displaying DateTime values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.IntervalType">
            <summary>
            Gets or sets the interval type of the DateTimeAxis2.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.IntervalTypeProperty">
            <summary>
            Identifies the IntervalType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnIntervalTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its IntervalType.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnIntervalTypePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.YearsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.YearsIntervalStringFormatProperty">
            <summary>
            Identifies the YearsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnYearsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            YearsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its YearsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnYearsIntervalStringFormatPropertyChanged">
            <summary>
            YearsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MonthsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MonthsIntervalStringFormatProperty">
            <summary>
            Identifies the MonthsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMonthsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MonthsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MonthsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMonthsIntervalStringFormatPropertyChanged">
            <summary>
            MonthsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.WeeksIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.WeeksIntervalStringFormatProperty">
            <summary>
            Identifies the WeeksIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnWeeksIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            WeeksIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its WeeksIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnWeeksIntervalStringFormatPropertyChanged">
            <summary>
            WeeksIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.DaysIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.DaysIntervalStringFormatProperty">
            <summary>
            Identifies the DaysIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnDaysIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DaysIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its DaysIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnDaysIntervalStringFormatPropertyChanged">
            <summary>
            DaysIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.HoursIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.HoursIntervalStringFormatProperty">
            <summary>
            Identifies the HoursIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnHoursIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HoursIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its HoursIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnHoursIntervalStringFormatPropertyChanged">
            <summary>
            HoursIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MinutesIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MinutesIntervalStringFormatProperty">
            <summary>
            Identifies the MinutesIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMinutesIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinutesIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MinutesIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMinutesIntervalStringFormatPropertyChanged">
            <summary>
            MinutesIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.SecondsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.SecondsIntervalStringFormatProperty">
            <summary>
            Identifies the SecondsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnSecondsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SecondsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its SecondsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnSecondsIntervalStringFormatPropertyChanged">
            <summary>
            SecondsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MillisecondsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MillisecondsIntervalStringFormatProperty">
            <summary>
            Identifies the MillisecondsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMillisecondsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MillisecondsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MillisecondsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMillisecondsIntervalStringFormatPropertyChanged">
            <summary>
            MillisecondsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.#cctor">
            <summary>
            Initializes the static members of the DateTimeAxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the DateTimeAxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.UpdateFormattedContent">
            <summary>
            Updates the formatted text.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType">
            <summary>
            A date time interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Weeks">
            <summary>
            Interval type is weeks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DisplayAxis">
            <summary>
            An axis that has a range.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MaximumAxisIntervalsPer200Pixels">
            <summary>
            Maximum intervals per 200 pixels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisGridName">
            <summary>
            The name of the axis grid template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisTitleName">
            <summary>
            The name of the axis title template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisLabelStyle">
            <summary>
            Gets or sets the style used for the axis labels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisLabelStyleProperty">
            <summary>
            Identifies the AxisLabelStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnAxisLabelStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AxisLabelStyleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its AxisLabelStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnAxisLabelStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            AxisLabelStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ActualLength">
            <summary>
            Gets the actual length.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GetLength(System.Windows.Size)">
            <summary>
            Returns the length of the axis given an available size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The length of the axis given an available size.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._gridLines">
            <summary>
            This field stores the grid lines element.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLines">
            <summary>
            Gets or sets the grid lines property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnGridLinesPropertyChanged(System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines,System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines)">
            <summary>
            GridLinesProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MajorTickMarkStyle">
            <summary>
            Gets or sets the style applied to the Axis tick marks.
            </summary>
            <value>The Style applied to the Axis tick marks.</value>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MajorTickMarkStyleProperty">
            <summary>
            Identifies the MajorTickMarkStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnMajorTickMarkStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MajorTickMarkStyleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its MajorTickMarkStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnMajorTickMarkStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            MajorTickMarkStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Title">
            <summary>
            Gets or sets the title property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnTitlePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TitleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its Title.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnTitlePropertyChanged(System.Object,System.Object)">
            <summary>
            TitleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleLayoutTransformControl">
            <summary>
            Gets or sets the LayoutTransformControl used to rotate the title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleStyle">
            <summary>
            Gets or sets the style applied to the Axis title.
            </summary>
            <value>The Style applied to the Axis title.</value>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether grid lines should be shown.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ShowGridLinesProperty">
            <summary>
            Identifies the ShowGridLines dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnShowGridLinesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ShowGridLinesProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its ShowGridLines.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnShowGridLinesPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            ShowGridLinesProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.SetShowGridLines(System.Boolean)">
            <summary>
            Creates and destroys a grid lines element based on the specified
            value.
            </summary>
            <param name="newValue">A value indicating whether to display grid 
            lines or not.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLineStyle">
            <summary>
            Gets or sets the Style of the Axis's gridlines.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLineStyleProperty">
            <summary>
            Identifies the GridlineStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._grid">
            <summary>
            The grid used to layout the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisGrid">
            <summary>
            Gets or sets the grid used to layout the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.DependentAxisGrid">
            <summary>
            Gets or sets a grid to lay out the dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OrientedPanel">
            <summary>
            Gets the oriented panel used to layout the axis labels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._axisTitle">
            <summary>
            The control used to display the axis title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisTitle">
            <summary>
            Gets or sets the title control used to display the title.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateMajorTickMark">
            <summary>
            Creates a major axis tick mark.
            </summary>
            <returns>A line to used to render a tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateTickMark(System.Windows.Style)">
            <summary>
            Creates a tick mark and applies a style to it.
            </summary>
            <param name="style">The style to apply.</param>
            <returns>The newly created tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.InternalGetMajorGridLinePositions">
            <summary>
            This method is used to share the grid line coordinates with the
            internal grid lines control.
            </summary>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns the coordinates to use for the grid line control.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of coordinates at which to draw grid lines.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.#cctor">
            <summary>
            Initializes the static members of the DisplayAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.#ctor">
            <summary>
            Instantiates a new instance of the DisplayAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.DisplayAxisSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            If display axis has just become visible, invalidate.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateAxisLabel">
            <summary>
            Creates an axis label.
            </summary>
            <returns>The new axis label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnDependentAxesCollectionChanged">
            <summary>
            Updates the grid lines element if a suitable dependent axis has
            been added to a radial axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.PrepareAxisLabel(System.Windows.Controls.Control,System.Object)">
            <summary>
            Prepares an axis label to be plotted.
            </summary>
            <param name="label">The axis label to prepare.</param>
            <param name="dataContext">The data context to use for the axis 
            label.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnApplyTemplate">
            <summary>
            Retrieves template parts and configures layout.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnOrientedPanelSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            When the size of the oriented panel changes invalidate the axis.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnLocationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisLocation,System.Windows.Controls.DataVisualization.Charting.AxisLocation)">
            <summary>
            Arranges the grid when the location property is changed.
            </summary>
            <param name="oldValue">The old location.</param>
            <param name="newValue">The new location.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ArrangeAxisGrid">
            <summary>
            Arranges the elements in the axis grid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MeasureOverride(System.Windows.Size)">
            <summary>
            Renders the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The required size.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnOrientationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisOrientation,System.Windows.Controls.DataVisualization.Charting.AxisOrientation)">
            <summary>
            Reformulates the grid when the orientation is changed.  Grid is
            either separated into two columns or two rows.  The title is 
            inserted with the outermost section from the edge and an oriented
            panel is inserted into the innermost section.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnInvalidated(System.Windows.RoutedEventArgs)">
            <summary>
            Updates the visual appearance of the axis when it is invalidated.
            </summary>
            <param name="args">Information for the invalidated event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.RenderAxis(System.Windows.Size)">
            <summary>
            Renders the axis if there is a valid value for orientation.
            </summary>
            <param name="availableSize">The available size in which to render 
            the axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Invalidate">
            <summary>
            Invalidates the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._seriesHost">
            <summary>
            The series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.SeriesHost">
            <summary>
            Gets or sets the series host.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            This method is run when the series host property is changed.
            </summary>
            <param name="oldValue">The old series host.</param>
            <param name="newValue">The new series host.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines">
            <summary>
            This control draws gridlines with the help of an axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines._axis">
            <summary>
            The field that stores the axis that the grid lines are connected to.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.Axis">
            <summary>
            Gets the axis that the grid lines are connected to.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.OnAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.DisplayAxis,System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            AxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.#ctor(System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            Instantiates a new instance of the DisplayAxisGridLines class.
            </summary>
            <param name="axis">The axis used by the DisplayAxisGridLines.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Redraws grid lines when the size of the control changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Redraws grid lines when the axis is invalidated.
            </summary>
            <param name="axis">The invalidated axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.Invalidate">
            <summary>
            Draws the grid lines.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin">
            <summary>
            Range axes look for this interface on series to determine whether to
            anchor the origin to the bottom or top of the screen where possible.
            </summary>
            <remarks>
            Implementing this interface ensures that value margins will not cause
            an origin to float above the bottom or top of the screen if no
            data exists below or above.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis">
            <summary>
            Gets the axis to which the data is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAxis">
            <summary>
            An axis interface used to determine the plot area coordinate of values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.Orientation">
            <summary>
            Gets or sets the orientation of the axis.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.IAxis.OrientationChanged">
            <summary>
            This event is raised when the Orientation property is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether the axis can plot a value.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether the axis can plot a value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.RegisteredListeners">
            <summary>
            Gets the registered IAxisListeners.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.DependentAxes">
            <summary>
            Gets the collection of child axes.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAxisListener">
            <summary>
            An object that listens for changes in an axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxisListener.AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            This method is called when the axis is invalidated.
            </summary>
            <param name="axis">The axis that has been invalidated.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis">
            <summary>
            An axis that is arranged by category.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis.GetPlotAreaCoordinateRange(System.Object)">
            <summary>
            Accepts a category and returns the coordinate range of that category
            on the axis.
            </summary>
            <param name="category">A category for which to retrieve the 
            coordinate location.</param>
            <returns>The coordinate range of the category on the axis.</returns>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis.GetCategoryAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the category at a given coordinate.
            </summary>
            <param name="position">The plot are coordinate.</param>
            <returns>The category at the given plot area coordinate.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IDataConsumer">
            <summary>
            An object that consumes data.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IDataConsumer.DataChanged(System.Windows.Controls.DataVisualization.Charting.IDataProvider,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Supplies the consumer with data.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="data">The data used by the consumer.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IDataProvider">
            <summary>
            Provides information to a category axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IDataProvider.GetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Retrieves the data to be plotted on the axis.
            </summary>
            <param name="axis">The axis to retrieve the data for.</param>
            <returns>The data to plot on the axis.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeAxis">
            <summary>
            An axis with a range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.Range">
            <summary>
            Gets the range of values displayed on the axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="position">The position at which to retrieve the plot 
            area coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeConsumer">
            <summary>
            An object that consumes a range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeConsumer.RangeChanged(System.Windows.Controls.DataVisualization.Charting.IRangeProvider,System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Informs a range consumer that a provider's range has changed.
            </summary>
            <param name="provider">The range provider.</param>
            <param name="range">The range of data.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeProvider">
            <summary>
            Provides information to a RangeConsumer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeProvider.GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range of values.
            </summary>
            <param name="rangeConsumer">The range consumer requesting the data 
            range.</param>
            <returns>A data range.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer">
            <summary>
            Consumes value margins and uses them to lay out objects.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer.ValueMarginsChanged(System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.ValueMargin})">
            <summary>
            Updates layout to accommodate for value margins.
            </summary>
            <param name="provider">A value margin provider.</param>
            <param name="valueMargins">A sequence of value margins.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider">
            <summary>
            Provides information about margins necessary for values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Gets the margins required for values.
            </summary>
            <param name="consumer">The axis to retrieve the value margins 
            for.</param>
            <returns>The margins required for values.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LinearAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LinearAxis.Interval">
            <summary>
            Gets or sets the axis interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LinearAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OnIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="d">LinearAxis that changed its Interval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OnIntervalPropertyChanged">
            <summary>
            IntervalProperty property changed handler.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LinearAxis.ActualInterval">
            <summary>
            Gets the actual interval of the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LinearAxis.ActualIntervalProperty">
            <summary>
            Identifies the ActualInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.#ctor">
            <summary>
            Instantiates a new instance of the LinearAxis class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LinearAxis.ActualDoubleRange">
            <summary>
            Gets the actual range of double values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates ActualDoubleRange when ActualRange changes.
            </summary>
            <param name="range">New ActualRange value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetPlotAreaCoordinate(System.Object,System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="length">The length of axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="currentRange">The range of values.</param>
            <param name="length">The length of axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.Double},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="currentRange">The range of values.</param>
            <param name="length">The length of axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.CalculateActualInterval(System.Windows.Size)">
            <summary>
            Returns the actual interval to use to determine which values are 
            displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>Actual interval to use to determine which values are 
            displayed in the axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to create major tick marks for.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to create major tick marks for.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetMajorValues(System.Windows.Size)">
            <summary>
            Returns a sequence of major axis values.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of major axis values.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.AlignToInterval(System.Double,System.Double)">
            <summary>
            Aligns a value to the provided interval value.  The aligned value
            should always be smaller than or equal to than the provided value.
            </summary>
            <param name="value">The value to align to the interval.</param>
            <param name="interval">The interval to align to.</param>
            <returns>The aligned value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area position.</param>
            <returns>The value at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.LengthToRange(System.Double,System.Double)">
            <summary>
            Function that uses the mid point of all the data values
            in the value margins to convert a length into a range
            of data with the mid point as the center of that range.
            </summary>
            <param name="midPoint">The mid point of the range.</param>
            <param name="length">The length of the range.</param>
            <returns>The range object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the actual range to ensure that it is never set to an
            empty range.
            </summary>
            <param name="range">The range to override.</param>
            <returns>Returns the overridden range.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis">
            <summary>
            An axis that displays numeric values along a logarithmic range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.#ctor">
            <summary>
            Instantiates a new instance of the LogarithmicAxis
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.ActualDoubleRange">
            <summary>
            Gets the actual range of double values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates ActualDoubleRange when ActualRange changes.
            </summary>
            <param name="range">New ActualRange value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="currentRange">The range of values.</param>
            <param name="length">The length of axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.Double},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="range">The range of values.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of the value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area position.</param>
            <returns>The value at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to create major tick marks for.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to create major tick marks for.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LogarithmicAxis.GetMajorValues(System.Windows.Size)">
            <summary>
            Returns a sequence of major axis values.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of major axis values.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1">
            <summary>
            Converts a string or base value to a <see cref="T:System.Nullable"/> value.
            </summary>
            <typeparam name="T">The type should be value type.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="destinationType">The type you want to convert to.
            </param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from the specified value to the a specified type from the
            type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <param name="destinationType">The type of convert the value to
            .</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NumericAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMaximum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMaximumProperty">
            <summary>
            Identifies the ActualMaximum dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMinimum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMinimumProperty">
            <summary>
            Identifies the ActualMinimum dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Maximum">
            <summary>
            Gets or sets the maximum value plotted on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">NumericAxis that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMaximumPropertyChanged(System.Nullable{System.Double})">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Minimum">
            <summary>
            Gets or sets the minimum value to plot on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">NumericAxis that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMinimumPropertyChanged(System.Nullable{System.Double})">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ExtendRangeToOrigin">
            <summary>
            Gets or sets a value indicating whether to always show the origin.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ExtendRangeToOriginProperty">
            <summary>
            Identifies the ExtendRangeToOrigin dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnExtendRangeToOriginPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExtendRangeToOriginProperty property changed handler.
            </summary>
            <param name="d">NumericAxis that changed its ExtendRangeToOrigin.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnExtendRangeToOriginPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            ExtendRangeToOriginProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.#ctor">
            <summary>
            Instantiates a new instance of the NumericAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the typed actual maximum and minimum properties when the
            actual range changes.
            </summary>
            <param name="range">The actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can plot.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether a value can plot.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.CreateAxisLabel">
            <summary>
            Returns a numeric axis label.
            </summary>
            <returns>A numeric axis label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the data value range and returns a range that takes the
            margins of the values into account.
            </summary>
            <param name="range">The range of data values.</param>
            <returns>A range that can store both the data values and their 
            margins.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NumericAxisLabel">
            <summary>
            A label used to display numeric axis values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxisLabel.#cctor">
            <summary>
            Initializes the static members of the NumericAxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the NumericAxisLabel class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines">
            <summary>
            This control draws gridlines with the help of an axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines._gridLinePool">
            <summary>
            A pool of grid lines.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines.#ctor(System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            Initializes a new instance of the OrientedAxisGridLines class.
            </summary>
            <param name="displayAxis">The axis to draw grid lines for.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines.Invalidate">
            <summary>
            Draws the grid lines.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.RangeAxis">
            <summary>
            An axis that has a range.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._majorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._minorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._labelPool">
            <summary>
            A pool of labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.MinorTickMarkStyle">
            <summary>
            Gets or sets the minor tick mark style.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis.MinorTickMarkStyleProperty">
            <summary>
            Identifies the MinorTickMarkStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._actualRange">
            <summary>
            The actual range of values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ActualRange">
            <summary>
            Gets or sets the actual range of values.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._protectedMaximum">
            <summary>
            The maximum value displayed in the range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ProtectedMaximum">
            <summary>
            Gets or sets the maximum value displayed in the range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._protectedMinimum">
            <summary>
            The minimum value displayed in the range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ProtectedMinimum">
            <summary>
            Gets or sets the minimum value displayed in the range axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.#cctor">
            <summary>
            Initializes the static members of the RangeAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.#ctor">
            <summary>
            Instantiates a new instance of the RangeAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.CreateMinorTickMark">
            <summary>
            Creates a minor axis tick mark.
            </summary>
            <returns>A line to used to render a tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Invalidates axis when the actual range changes.
            </summary>
            <param name="range">The new actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            Returns the plot area coordinate of a given value.
            </summary>
            <param name="value">The value to return the plot area coordinate for.</param>
            <returns>The plot area coordinate of the given value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetPlotAreaCoordinate(System.Object,System.Double)">
            <summary>
            Returns the plot area coordinate of a given value.
            </summary>
            <param name="value">The value to return the plot area coordinate for.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of the given value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a given value.
            </summary>
            <param name="value">The value to return the plot area coordinate for.</param>
            <param name="currentRange">The value range to use when calculating the plot area coordinate.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of the given value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the data range.
            </summary>
            <param name="range">The range to potentially override.</param>
            <returns>The overridden range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.EnforceMaximumAndMinimum(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Modifies a range to respect the minimum and maximum axis values.
            </summary>
            <param name="range">The range of data.</param>
            <returns>A range modified to  respect the minimum and maximum axis 
            values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.UpdateActualRange">
            <summary>
            Updates the actual range displayed on the axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.RenderOriented(System.Windows.Size)">
            <summary>
            Renders the axis as an oriented axis.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns a sequence of the major grid line coordinates.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorGridLineValues(System.Windows.Size)">
            <summary>
            Returns a sequence of the values at which to plot major grid lines.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the values at which to plot major grid lines.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMinorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area coordinate.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#Range">
            <summary>
            Gets the actual maximum value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area coordinate.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeConsumer#RangeChanged(System.Windows.Controls.DataVisualization.Charting.IRangeProvider,System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the axis with information about a provider's data range.
            </summary>
            <param name="usesRangeAxis">The information provider.</param>
            <param name="range">The range of data in the information provider.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IValueMarginConsumer#ValueMarginsChanged(System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.ValueMargin})">
            <summary>
            Updates the layout of the axis to accommodate a sequence of value
            margins.
            </summary>
            <param name="provider">A value margin provider.</param>
            <param name="valueMargins">A sequence of value margins.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            If a new range provider is registered, update actual range.
            </summary>
            <param name="series">The axis listener being registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            If a range provider is unregistered, update actual range.
            </summary>
            <param name="series">The axis listener being unregistered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.UpdateValueMargins(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap},System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Create function that when given a range will return the 
            amount in pixels by which the value margin range 
            overlaps.  Positive numbers represent values outside the
            range.
            </summary>
            <param name="valueMargins">The list of value margins, coordinates, and overlaps.</param>
            <param name="comparableRange">The new range to use to calculate coordinates.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMaxLeftAndRightOverlap(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap},System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap@,System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap@)">
            <summary>
            Returns the value margin, coordinate, and overlap triples that have the largest left and right overlap.
            </summary>
            <param name="valueMargins">The list of value margin, coordinate, and 
            overlap triples.</param>
            <param name="maxLeftOverlapValueMargin">The value margin, 
            coordinate, and overlap triple that has the largest left overlap.
            </param>
            <param name="maxRightOverlapValueMargin">The value margin, 
            coordinate, and overlap triple that has the largest right overlap.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ValueMargin">
            <summary>
            A margin specified for a given value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value">
            <summary>
            Gets the value that the margin is associated with.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin">
            <summary>
            Gets the low margin for a value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin">
            <summary>
            Gets the high margin for a value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor(System.Object,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the ValueMargin class.
            </summary>
            <param name="value">The value the margin is associated with.</param>
            <param name="lowMargin">The lower margin.</param>
            <param name="highMargin">The higher margin.</param> 
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)">
            <summary>
            Determines whether two value margins are equal.
            </summary>
            <param name="obj">The value margin to compare with this one.</param>
            <returns>A value indicating whether the two value margins are equal.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)">
            <summary>
            Determines whether two unit value objects are equal.
            </summary>
            <param name="left">The left value margin.</param>
            <param name="right">The right value margin.</param>
            <returns>A value indicating  whether two value margins objects are 
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)">
            <summary>
            Determines whether two value margin objects are not equal.
            </summary>
            <param name="left">The left value margin.</param>
            <param name="right">The right value margin.</param>
            <returns>A value indicating whether two value margin objects are not
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode">
            <summary>
            Returns the hash code of the value margin object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Chart">
            <summary>
            Represents a control that displays a Chart.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaName">
            <summary>
            Specifies the name of the ChartArea TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.SelectionAreaName">
            <summary>
            Specifies the name of the ChartArea TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendName">
            <summary>
            Specifies the name of the legend TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.CrosshairContainerName">
            <summary>
            Specifies the name of the legend TemplatePart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaChildren">
            <summary>
            Gets or sets the chart area children collection.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._chartAreaChildrenListAdapter">
            <summary>
            An adapter that synchronizes changes to the ChartAreaChildren
            property to the ChartArea panel's children collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Axes">
            <summary>
            Gets or sets a collection of Axes in the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._axes">
            <summary>
            Stores the collection of Axes in the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._foregroundElements">
            <summary>
            The collection of foreground elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._backgroundElements">
            <summary>
            The collection of background elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#ForegroundElements">
            <summary>
            Gets the collection of foreground elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ForegroundElements">
            <summary>
            Gets the collection of foreground elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#BackgroundElements">
            <summary>
            Gets the collection of background elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.BackgroundElements">
            <summary>
            Gets the collection of background elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._edgeAxes">
            <summary>
            Axes arranged along the edges.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.InternalActualAxes">
            <summary>
            Gets or sets the axes that are currently in the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ActualAxes">
            <summary>
            Gets the actual axes displayed in the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartArea">
            <summary>
            Gets or sets the reference to the template's ChartArea.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Legend">
            <summary>
            Gets or sets the reference to the Chart's Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Series">
            <summary>
            Gets or sets the collection of Series displayed by the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._series">
            <summary>
            Stores the collection of Series displayed by the Chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ItemsSource">
            <summary>
            List of CLR-objects which represent series of the chart
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ItemTemplate">
            <summary>
            Template for an item, transforms a CLR-object to an ISeries object
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ItemsHostTemplate">
            <summary>
            This property is necessary for stacked charts
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's ChartArea.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaStyleProperty">
            <summary>
            Identifies the ChartAreaStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendItems">
            <summary>
            Gets the collection of legend items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's Legend.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendStyleProperty">
            <summary>
            Identifies the LegendStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendTitle">
            <summary>
            Gets or sets the Title content of the Legend.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendTitleProperty">
            <summary>
            Identifies the LegendTitle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.PlotAreaStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's PlotArea.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.PlotAreaStyleProperty">
            <summary>
            Identifies the PlotAreaStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Palette">
            <summary>
            Gets or sets a palette of ResourceDictionaries used by the children of the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnPalettePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the Palette property is changed.
            </summary>
            <param name="d">Chart that contains the changed Palette.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnPalettePropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary})">
            <summary>
            Called when the value of the Palette property is changed.
            </summary>
            <param name="newValue">The new value for the Palette.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ResourceDictionaryDispenser">
            <summary>
            Gets or sets an object that rotates through the palette.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Chart.ResourceDictionariesChanged">
            <summary>
            Event that is invoked when the ResourceDictionaryDispenser's collection has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Title">
            <summary>
            Gets or sets the title displayed for the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.TitleStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's Title.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.#cctor">
            <summary>
            Initializes the static members of the Chart class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.#ctor">
            <summary>
            Initializes a new instance of the Chart class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnResourceDictionariesChanged(System.EventArgs)">
            <summary>
            Invokes the ResourceDictionariesChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.GetAutoAxisLocation(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Determines the location of an axis based on the existing axes in
            the chart.
            </summary>
            <param name="axis">The axis to determine the location of.</param>
            <returns>The location of the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AddAxisToChartArea(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Adds an axis to the ISeriesHost area.
            </summary>
            <param name="axis">The axis to add to the ISeriesHost area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AxisOrientationChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.AxisOrientation})">
            <summary>
            Rebuilds the chart area if an axis orientation is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.SetEdge(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Sets the Edge property of an axis based on its location and
            orientation.
            </summary>
            <param name="axis">The axis to set the edge property of.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AxisLocationChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.AxisLocation})">
            <summary>
            Rebuild the chart area if an axis location is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AddSeriesToPlotArea(System.Windows.Controls.DataVisualization.Charting.ISeries)">
            <summary>
            Adds a series to the plot area and injects chart services.
            </summary>
            <param name="series">The series to add to the plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Chart control when a new template
            is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.ActualAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Ensures that ISeriesHost is in a consistent state when axes collection is
            changed.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.RemoveAxisFromChartArea(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Removes an axis from the Chart area.
            </summary>
            <param name="axis">The axis to remove from the ISeriesHost area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.RemoveSeriesFromPlotArea(System.Windows.Controls.DataVisualization.Charting.ISeries)">
            <summary>
            Removes a series from the plot area.
            </summary>
            <param name="series">The series to remove from the plot area.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.SeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the ObservableCollection.CollectionChanged property
            changes.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.ChildSeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles changes to the collections of child ISeries implementing ISeriesHost.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.GetResourceDictionariesWhere(System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Returns a rotating enumerator of ResourceDictionary objects that coordinates
            with the dispenser object to ensure that no two enumerators are on the same
            item. If the dispenser is reset or its collection is changed then the
            enumerators are also reset.
            </summary>
            <param name="predicate">A predicate that returns a value indicating
            whether to return an item.</param>
            <returns>An enumerator of ResourceDictionaries.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnGlobalSeriesIndexesInvalidated(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the global indexes of all descendents that require a global
            index.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.UpdateGlobalIndexes">
            <summary>
            Updates the global index property of all Series that track their
            global index.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#IRequireSeriesHost#SeriesHost">
            <summary>
            Gets or sets the Series host of the chart.
            </summary>
            <remarks>This will always return null.</remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.SeriesHost">
            <summary>
            Gets or sets the Series host of the chart.
            </summary>
            <remarks>This will always return null.</remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Axes">
            <summary>
            Gets the axes collection of the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Series">
            <summary>
            Gets the Series collection of the chart.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartHelper.GetPieChartInfo(System.Windows.Media.Geometry,System.Windows.Point@,System.Windows.Point@,System.Boolean@)">
            <summary>
            Gets the center and arc midpoint from a pie chart data point's geometry.
            It also determines if the arc of this geometry is small.
            </summary>
            <param name="geometry">The geometry of a pie chart data point.</param>
            <param name="center">The center of the pie chart.</param>
            <param name="midpoint">The midpoint of the arc in the pie wedge.</param>
            <param name="isArcSmall">True if the arc of the geometry is small, false otherwise.</param>
            <returns>True if the geometry is of the right form, false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartHelper.CalculateArcInfo(System.Windows.Point,System.Windows.Point,System.Windows.Media.ArcSegment,System.Windows.Point@,System.Boolean@)">
            <summary>
            Calculates the midpoint of the arc passed as a parameter, as well as whether the arc is small.
            </summary>
            <param name="center">The center of the pie chart.</param>
            <param name="startPoint">The start point of the arc segment.</param>
            <param name="arcSegment">The arc of the pie wedge itself.</param>
            <param name="arcMidpoint">he midpoint of the arc in the pie wedge.</param>
            <param name="isArcSmall">True if the arc is small, false otherwise.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieChartLabel">
            <summary>
            This is the control that holds the label. It includes an optional line connecting it to the chart, and whatever
            content the developer specifies in the DataTemplate.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.FormattedRatioProperty">
            <summary>
            FormattedRation DP - When a PieChartLabel is created, this property is data bound to the PieDataPoint's equivalent
            property. It will typically be used within the DataTemplate for PieChartLabel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.GeometryProperty">
            <summary>
            Geometry DP - When a PieChartLabel is created, this property is data bound to the PieDataPoint's equivalent
            property. We need this information to calculate the position of the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.DisplayMode">
            <summary>
            DisplayMode DP - The developer can set this DP to control how the labels should be displayed.
            This property can have one of the following values:
            ArcMidpoint - Center of the label is positioned at the arc midpoint.
            Connected - A line connecting the arc midpoint and label is displayed.
            Auto - If at least one pie slice is very small, all pie slices use the Connected display mode. Otherwise, they all use ArcMidpoint.
            AutoMixed - Connected display mode is used for all small pie slices, and ArcMidpoint is used for all other slices.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.LineStroke">
            <summary>
            LineStroke DP - Determines the brush of the line when in connected mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.LineStrokeThickness">
            <summary>
            LineStrokeThickness DP - Determines the thickness of the line when in connected mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.ArrangeOverride(System.Windows.Size)">
            <summary>
            On arrange, re-position the label.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.OnApplyTemplate">
            <summary>
            When the template is applied, get the template parts. Also, ensure that if the 
            content of the label changes, the label is re-positioned.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.PositionLabel">
            <summary>
            Positions the label depending on the display mode specified by the developer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.PositionArcMidpoint">
            <summary>
            Positions the label with its center in the same location as the midpoint of the pie slice arc.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.PositionConnected">
            <summary>
            Adds a line that connects the arc midpoint to the label and positions the label appropriately.
            Ideally, I would add the Polyline in the template and I would only change its points here. Unfortunately,
            because of a WPF bug, the Polyline doesn't render in certain corner-case scenarios. As a workaround,
            I create a new Polyline everytime the label is positioned, as can be seen in this method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.RemovePolyline">
            <summary>
            Removes the Polyline from the canvas part.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.PositionAutoMixed">
            <summary>
            Positions the label in the arc midpoint if it's big enough, and displays it connected by a line if it's
            small.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.PositionAuto">
            <summary>
            If at least one arc is small, all labels are displayed connected by a line. Otherwise, they're positioned
            in the arc midpoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.SnapPoint(System.Windows.Point)">
            <summary>
            Ensures that the line connecting the label is positioned in such a way that whole pixels are used to render
            it. This calculation depends on whether the thickness of the line is odd or even.
            </summary>
            <param name="point">A point belonging to the polyline.</param>
            <returns>The point that will cause the line to snap to pixels.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabel.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            When a label is clicked, the corresponding PieDataPoint becomes selected.
            This enables master-detail scenario driven by clicking on labels.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DisplayMode">
            <summary>
            Modes used to control how the labels are positioned.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieChartLabelArea">
            <summary>
            Canvas where all labels (of type PieChartLabel) will be added. We need a separate
            canvas to avoid z-order issues. This prevents having a pie slice overlap a label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieChartLabelArea.HasSmallArc">
            <summary>
            HasSmallArc DP - If at least one slice of the pie chart is small, this property is set
            to true. This is used in the "Auto" mode. When in this mode, if this property is set to
            true, all labels will be connected to the chart by a line.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabelArea.HasSmallArcPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            When the HasSmallArc DO is set, all labels should be re-arranged.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieChartLabelArea.MeasureOverride(System.Windows.Size)">
            <summary>
            On measure, we check if there is at least one child of the canvas that is small, and we set
            HasSmallArc to reflect that information. 
            Setting HasSmallArc ends up causing all labels to be re-arranged taking this information
            into consideration.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.TreeHelper.FindAncestor``1(System.Windows.DependencyObject)">
            <summary>
            Finds the first ancestor of the element passed as a parameter that has type T.
            </summary>
            <typeparam name="T">The type of the ancestor we're looking for.</typeparam>
            <param name="visual">The element where we start our search.</param>
            <returns>The first ancestor of element of type T.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection">
            <summary>
            An axes collection used by a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.SeriesHost">
            <summary>
            Gets or sets the series host field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.PersistentAxes">
            <summary>
            Gets or sets a collection of axes cannot be removed under any 
            circumstances.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.#ctor(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Instantiates a new instance of the SeriesHostAxesCollection class.
            </summary>
            <param name="seriesHost">The series host.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.#ctor(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.UniqueObservableCollection{System.Windows.Controls.DataVisualization.Charting.IAxis})">
            <summary>
            Instantiates a new instance of the SeriesHostAxesCollection class.
            </summary>
            <param name="seriesHost">The series host.</param>
            <param name="persistentAxes">A collection of axes that can never be 
            removed from the chart.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.ThisCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            A method that attaches and removes listeners to axes added to this
            collection.
            </summary>
            <param name="sender">This object.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.AxisRegisteredListenersCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Remove an axis from the collection if it is no longer used.
            </summary>
            <param name="sender">The axis that has had its registered 
            listeners collection changed.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.PersistentAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This method synchronizes the collection with the persistent axes 
            collection when it is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes an item from the axes collection but throws an exception
            if a series in the series host is listening to it.
            </summary>
            <param name="index">The index of the item being removed.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AreaDataPoint">
            <summary>
            Represents a data point used for an area series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaDataPoint.#cctor">
            <summary>
            Initializes the static members of the AreaDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaDataPoint.#ctor">
            <summary>
            Initializes a new instance of the AreaDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BarDataPoint">
            <summary>
            Represents a data point used for a bar series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarDataPoint.#cctor">
            <summary>
            Initializes the static members of the BarDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarDataPoint.#ctor">
            <summary>
            Initializes a new instance of the BarDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint">
            <summary>
            Represents a data point used for a bubble series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.Size">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnSizePropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.SizePropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSize">
            <summary>
            Gets or sets the actual size of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSizeProperty">
            <summary>
            Identifies the ActualSize dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnActualSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ActualSizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its ActualSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnActualSizePropertyChanged(System.Double,System.Double)">
            <summary>
            ActualSizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSizePropertyChanged">
            <summary>
            This event is raised when the actual size property is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.#cctor">
            <summary>
            Initializes the static members of the BubbleDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.#ctor">
            <summary>
            Initializes a new instance of the bubble data point.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint">
            <summary>
            Represents a data point used for scatter series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.Open">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OpenProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnOpenPropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OpenPropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.Close">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.CloseProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnClosePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnClosePropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.ClosePropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.High">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.HighProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnHighPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnHighPropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.HighPropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.Low">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.LowProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnLowPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.OnLowPropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.LowPropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.#cctor">
            <summary>
            Initializes the static members of the BarDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickDataPoint.#ctor">
            <summary>
            Initializes a new instance of the ScatterDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnDataPoint">
            <summary>
            Represents a data point used for a column series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnDataPoint.#cctor">
            <summary>
            Initializes the static members of the ColumnDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnDataPoint.#ctor">
            <summary>
            Initializes a new instance of the ColumnDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPoint">
            <summary>
            Represents a control that displays a data point.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupCommonStates">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateCommonNormal">
            <summary>
            Normal state of the Common group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateCommonMouseOver">
            <summary>
            MouseOver state of the Common group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupSelectionStates">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateSelectionUnselected">
            <summary>
            Unselected state of the Selection group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateSelectionSelected">
            <summary>
            Selected state of the Selection group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupRevealStates">
            <summary>
            Reveal state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateRevealShown">
            <summary>
            Shown state of the Reveal group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateRevealHidden">
            <summary>
            Hidden state of the Reveal group.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectionEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="d">Control that changed its IsSelectionEnabled.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectionEnabledPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsActive">
            <summary>
            Gets a value indicating whether the data point is active.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectedChanged">
            <summary>
            An event raised when the IsSelected property is changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isHovered">
            <summary>
            A value indicating whether the mouse is hovering over the data 
            point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsHovered">
            <summary>
            Gets a value indicating whether the mouse is hovering over
            the data point.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsHoveredPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsHoveredProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelected">
            <summary>
            Gets or sets a value indicating whether the data point is selected.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="d">Control that changed its IsSelected.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValueChanged">
            <summary>
            Event raised when the actual dependent value of the data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValue">
            <summary>
            Gets or sets the actual dependent value displayed in the chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValueProperty">
            <summary>
            Identifies the ActualDependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualDependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualDependentValue property changes.
            </summary>
            <param name="d">Control that changed its ActualDependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isCoercingActualDependentValue">
            <summary>
            A value indicating whether the actual independent value is being
            coerced.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._oldActualDependentValueBeforeCoercion">
            <summary>
            The preserved previous actual dependent value before coercion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualDependentValuePropertyChanged(System.IComparable,System.IComparable)">
            <summary>
            Called when the value of the ActualDependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueChanged">
            <summary>
            This event is raised when the dependent value of the data point is 
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValue">
            <summary>
            Gets or sets the dependent value of the Control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueProperty">
            <summary>
            Identifies the DependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the DependentValue property changes.
            </summary>
            <param name="d">Control that changed its DependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValuePropertyChanged(System.IComparable,System.IComparable)">
            <summary>
            Called when the DependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueStringFormat">
            <summary>
            Gets or sets the format string for the FormattedDependentValue property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueStringFormatProperty">
            <summary>
            Identifies the DependentValueStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValueStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when DependentValueStringFormat property changes.
            </summary>
            <param name="d">Control that changed its DependentValueStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValueStringFormatPropertyChanged(System.String,System.String)">
            <summary>
            Called when DependentValueStringFormat property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedDependentValue">
            <summary>
            Gets the DependentValue as formatted by the DependentValueStringFormat property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedDependentValueProperty">
            <summary>
            Identifies the FormattedDependentValue dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedIndependentValue">
            <summary>
            Gets the IndependentValue as formatted by the IndependentValueStringFormat property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedIndependentValueProperty">
            <summary>
            Identifies the FormattedIndependentValue dependency property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueChanged">
            <summary>
            Called when the independent value of the data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValue">
            <summary>
            Gets or sets the independent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueProperty">
            <summary>
            Identifies the IndependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IndependentValue property changes.
            </summary>
            <param name="d">Control that changed its IndependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValuePropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the IndependentValue property changes.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueStringFormat">
            <summary>
            Gets or sets the format string for the FormattedIndependentValue property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueStringFormatProperty">
            <summary>
            Identifies the IndependentValueStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValueStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the IndependentValueStringFormat property changes.
            </summary>
            <param name="d">Control that changed its IndependentValueStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValueStringFormatPropertyChanged(System.String,System.String)">
            <summary>
            Called when the value of the IndependentValueStringFormat property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValueChanged">
            <summary>
            Occurs when the actual independent value of the data point is 
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValue">
            <summary>
            Gets or sets the actual independent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isCoercingActualIndependentValue">
            <summary>
            A value indicating whether the actual independent value is being
            coerced.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._oldActualIndependentValueBeforeCoercion">
            <summary>
            The preserved previous actual dependent value before coercion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValueProperty">
            <summary>
            Identifies the ActualIndependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualIndependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ActualIndependentValue property changes.
            </summary>
            <param name="d">Control that changed its ActualIndependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualIndependentValuePropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the ActualIndependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateChanged">
            <summary>
            Occurs when the state of a data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsCoercingState">
            <summary>
            Gets or sets a value indicating whether the State property is being
            coerced to its previous value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.State">
            <summary>
            Gets or sets the state of the data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateProperty">
            <summary>
            Identifies the State dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the State property changes.
            </summary>
            <param name="d">Control that changed its State.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnStatePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DataPointState,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Called when the value of the State property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ImplementationRoot">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._haveStateRevealShown">
            <summary>
            Tracks whether the Reveal/Shown VisualState is available.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._haveStateRevealHidden">
            <summary>
            Tracks whether the Reveal/Hidden VisualState is available.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._templateApplied">
            <summary>
            Tracks whether the template has been applied yet.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the DataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.GoToCurrentRevealState">
            <summary>
            Updates the Control's visuals to reflect the current state(s).
            </summary>
            <returns>True if a state transition was started.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnApplyTemplate">
            <summary>
            Builds the visual tree for the DataPoint when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnCurrentStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Changes the DataPoint object's state after one of the VSM state animations completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Control's Loaded event.
            </summary>
            <param name="sender">The Control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.DefinitionSeriesIsSelectionEnabledHandling">
            <summary>
            Gets or sets a value indicating whether to handle IsSelectionEnabled in the DefinitionSeries manner.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.SetFormattedProperty(System.Windows.DependencyProperty,System.String,System.Object)">
            <summary>
            Sets a dependency property with the specified format.
            </summary>
            <param name="property">The DependencyProperty to set.</param>
            <param name="format">The Format string to apply to the value.</param>
            <param name="value">The value of the dependency property to be formatted.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointState">
            <summary>
            Describes the state a data point is in.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Created">
            <summary>
            Data point has been created.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Showing">
            <summary>
            Data point is in the process of being revealed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Normal">
            <summary>
            Data point is visible in the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.PendingRemoval">
            <summary>
            Data point is in the process of being removed from the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Hiding">
            <summary>
            Data point is in the process of being hidden.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Hidden">
            <summary>
            Data point is hidden.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineDataPoint">
            <summary>
            Represents a data point used for a line series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineDataPoint.#cctor">
            <summary>
            Initializes the static members of the LineDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineDataPoint.#ctor">
            <summary>
            Initializes a new instance of the LineDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieDataPoint">
            <summary>
            Represents a data point used for a pie series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceName">
            <summary>
            The name of the slice template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualDataPointStyleName">
            <summary>
            Name of the ActualDataPointStyle property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.Geometry">
            <summary>
            Gets or sets the Geometry property which defines the shape of the
            data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryProperty">
            <summary>
            Identifies the Geometry dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometrySelection">
            <summary>
            Gets or sets the Geometry which defines the shape of a point. The 
            GeometrySelection property is a copy of the Geometry property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometrySelectionProperty">
            <summary>
            Identifies the GeometrySelection dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryHighlight">
            <summary>
            Gets or sets the GeometryHighlight property which is a clone of the
            Geometry property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryHighlightProperty">
            <summary>
            Identifies the GeometryHighlight dependency property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatioChanged">
            <summary>
            Occurs when the actual offset ratio of the pie data point changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatio">
            <summary>
            Gets or sets the offset ratio that is displayed on the screen.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatioProperty">
            <summary>
            Identifies the ActualOffsetRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualOffsetRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualOffsetRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its ActualOffsetRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualOffsetRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the ActualOffsetRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatioChanged">
            <summary>
            An event raised when the actual ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatio">
            <summary>
            Gets or sets the ratio displayed on the screen.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatioProperty">
            <summary>
            Identifies the ActualRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its ActualRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the ActualRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.FormattedRatio">
            <summary>
            Gets the Ratio with the value of the RatioStringFormat property applied.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.FormattedRatioProperty">
            <summary>
            Identifies the FormattedRatio dependency property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatioChanged">
            <summary>
            An event raised when the offset ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatio">
            <summary>
            Gets or sets the offset ratio of the pie data point.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatioProperty">
            <summary>
            Identifies the OffsetRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnOffsetRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the OffsetRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its OffsetRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnOffsetRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the OffsetRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioChanged">
            <summary>
            An event raised when the ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.Ratio">
            <summary>
            Gets or sets the ratio of the total that the data point 
            represents.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioProperty">
            <summary>
            Identifies the Ratio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the RatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its Ratio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the RatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioStringFormat">
            <summary>
            Gets or sets the format string for the FormattedRatio property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioStringFormatProperty">
            <summary>
            Identifies the RatioStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the RatioStringFormatProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its RatioStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioStringFormatPropertyChanged(System.String)">
            <summary>
            Called when the value of the RatioStringFormatProperty property changes.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualDataPointStyle">
            <summary>
            Gets or sets the actual style used for the data points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualDataPointStyleProperty">
            <summary>
            Identifies the ActualDataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualLegendItemStyle">
            <summary>
            Gets or sets the actual style used for the legend item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualLegendItemStyleProperty">
            <summary>
            Identifies the ActualLegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.PaletteResources">
            <summary>
            Gets the Palette-dispensed ResourceDictionary for the Series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement">
            <summary>
            Gets or sets the element that represents the pie slice.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.#cctor">
            <summary>
            Initializes the static members of the PieDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.#ctor">
            <summary>
            Initializes a new instance of the PieDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnApplyTemplate">
            <summary>
            Builds the visual tree for the PieDataPoint when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ScatterDataPoint">
            <summary>
            Represents a data point used for a scatter series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterDataPoint.#cctor">
            <summary>
            Initializes the static members of the ScatterDataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterDataPoint.#ctor">
            <summary>
            Initializes a new instance of the ScatterDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions">
            <summary>
            A set of extension methods for the DataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions.GetActualMargin(System.Windows.FrameworkElement,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Returns the actual margin for a given framework element and axis.
            </summary>
            <param name="element">The framework element.</param>
            <param name="axis">The axis along which to return the margin.
            </param>
            <returns>The margin for a given framework element and axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions.GetMargin(System.Windows.FrameworkElement,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Returns the margin for a given framework element and axis.
            </summary>
            <param name="element">The framework element.</param>
            <param name="axis">The axis along which to return the margin.
            </param>
            <returns>The margin for a given framework element and axis.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRequireSeriesHost">
            <summary>
            An object that implements this interface requires a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRequireSeriesHost.SeriesHost">
            <summary>
            Gets or sets the series host.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ISeriesHost">
            <summary>
            Defines properties, methods and events for classes that host a 
            collection of Series objects.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.Axes">
            <summary>
            Gets the collection of axes the series host has available.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.Series">
            <summary>
            Gets the collection of series the series host has available.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.ForegroundElements">
            <summary>
            Gets the foreground elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.BackgroundElements">
            <summary>
            Gets the background elements.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions">
            <summary>
            Extension methods for series hosts.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions.GetDescendentSeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Gets all series that track their global indexes recursively.
            </summary>
            <param name="rootSeriesHost">The root series host.</param>
            <returns>A sequence of series.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions.IsUsedByASeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Gets a value indicating whether an axis is in use by the series 
            host.
            </summary>
            <param name="that">The series host.</param>
            <param name="axis">The axis that may or may not be used by a 
            series.</param>
            <returns>A value indicating whether an axis is in use by the series 
            host.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox">
            <summary>
            Subclasses ListBox to provide an easy way for a consumer of
            ListBox to hook into the four standard ListBox *Container*
            overrides.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.IsItemItsOwnContainer">
            <summary>
            Gets or sets a function to call when the
            IsItemItsOwnContainerOverride method executes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.GetContainerForItem">
            <summary>
            Gets or sets a function to call when the
            GetContainerForItem method executes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.PrepareContainerForItem">
            <summary>
            Gets or sets an action to call when the
            PrepareContainerForItem method executes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.ClearContainerForItem">
            <summary>
            Gets or sets an action to call when the
            ClearContainerForItem method executes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.#cctor">
            <summary>
            Initializes static members of the DelegatingListBox class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.#ctor">
            <summary>
            Initializes a new instance of the DelegatingListBox class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True if the item is (or is eligible to be) its own container; otherwise, false.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.DelegatingListBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the PrepareContainerForItemOverride method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge">
            <summary>
            Specifies the edge position of a child element that is inside an
            EdgePanel.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Center">
            <summary>
            A child element that is positioned in the center of a EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Left">
            <summary>
            A child element that is positioned on the left side of the
            EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Top">
            <summary>
            A child element that is positioned at the top of the EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Right">
            <summary>
            A child element that is positioned on the right side of the
            EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Bottom">
            <summary>
            A child element that is positioned at the bottom of the EdgePanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally
            or vertically, relative to each other.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.MaximumIterations">
            <summary>
            The maximum number of iterations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._ignorePropertyChange">
            <summary>
            A flag that ignores a property change when set.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.GetEdge(System.Windows.UIElement)">
            <summary>
            Gets the value of the Edge attached property for a specified
            UIElement.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>The Edge property value for the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.SetEdge(System.Windows.UIElement,System.Windows.Controls.DataVisualization.Charting.Primitives.Edge)">
            <summary>
            Sets the value of the Edge attached property to a specified element.
            </summary>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="edge">The needed Edge value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.EdgeProperty">
            <summary>
            Identifies the Edge dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.OnEdgePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EdgeProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Edge.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.#ctor">
            <summary>
            Initializes a new instance of the EdgePanel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.EdgePanelSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Invalidate measure when edge panel is resized.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._leftRect">
            <summary>
            The left rectangle in which to render left elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._rightRect">
            <summary>
            The right rectangle in which to render right elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._topRect">
            <summary>
            The top rectangle in which to render top elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._bottomRect">
            <summary>
            The bottom rectangle in which to render bottom elements.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a EdgePanel in anticipation of arranging
            them during the ArrangeOverride pass.
            </summary>
            <param name="constraint">A maximum Size to not exceed.</param>
            <returns>The desired size of the EdgePanel.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content (child elements) of a EdgePanel element.
            </summary>
            <param name="arrangeSize">
            The Size the EdgePanel uses to arrange its child elements.
            </param>
            <returns>The arranged size of the EdgePanel.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.SafeCreateRect(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a Rect safely by forcing width/height to be valid.
            </summary>
            <param name="left">Rect left parameter.</param>
            <param name="top">Rect top parameter.</param>
            <param name="width">Rect width parameter.</param>
            <param name="height">Rect height parameter.</param>
            <returns>New Rect struct.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser">
            <summary>
            A class that rotates through a list of ResourceDictionaries.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser._resourceDictionariesDispensed">
            <summary>
            A linked list of ResourceDictionaries dispensed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser._resourceDictionaryEnumerators">
            <summary>
            A bag of weak references to connected style enumerators.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser._ignoreResourceDictionaryDispensedByEnumerator">
            <summary>
            Value indicating whether to ignore that the enumerator has 
            dispensed a ResourceDictionary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser._resourceDictionaries">
            <summary>
            The list of ResourceDictionaries of rotate.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.ResourceDictionaries">
            <summary>
            Gets or sets the list of ResourceDictionaries to rotate.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.ResourceDictionariesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This method is raised when the ResourceDictionaries collection is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser._parent">
            <summary>
            The parent of the ResourceDictionaryDispenser.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.ResourceDictionariesChanged">
            <summary>
            Event that is invoked when the ResourceDictionaryDispenser's contents have changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.Parent">
            <summary>
            Gets or sets the parent of the ResourceDictionaryDispenser.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.#ctor">
            <summary>
            Initializes a new instance of the ResourceDictionaryDispenser class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.Reset">
            <summary>
            Resets the state of the ResourceDictionaryDispenser and its enumerators.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.Unregister(System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator)">
            <summary>
            Unregisters an enumerator so that it can be garbage collected.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.GetResourceDictionariesWhere(System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Returns a rotating enumerator of ResourceDictionary objects that coordinates
            with the dispenser object to ensure that no two enumerators are on the same
            item. If the dispenser is reset or its collection is changed then the
            enumerators are also reset.
            </summary>
            <param name="predicate">A predicate that returns a value indicating
            whether to return an item.</param>
            <returns>An enumerator of ResourceDictionaries.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.EnumeratorResourceDictionaryDispensed(System.Object,System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs)">
            <summary>
            This method is raised when an enumerator dispenses a ResourceDictionary.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.OnParentChanged">
            <summary>
            Raises the ParentChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.OnEnumeratorResourceDictionaryDispensed(System.Object,System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs)">
            <summary>
            Raises the EnumeratorResourceDictionaryDispensed event.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.OnResetting">
            <summary>
            This method raises the EnumeratorsResetting event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser.ParentResourceDictionariesChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the Parent's ResourceDictionariesChanged event.
            </summary>
            <param name="sender">Parent instance.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator">
            <summary>
            An enumerator that dispenses ResourceDictionaries sequentially by coordinating with
            related enumerators.  Enumerators are related through an association
            with a parent ResourceDictionaryDispenser class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.index">
            <summary>
            The index of current item in the ResourceDictionaryDispenser's list.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.CurrentResourceDictionary">
            <summary>
            Gets or sets the current ResourceDictionary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator._parentEnumerator">
            <summary>
            The parent enumerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ParentEnumerator">
            <summary>
            Gets the parent enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.#ctor(System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryDispenser,System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Initializes a new instance of a ResourceDictionaryEnumerator.
            </summary>
            <param name="dispenser">The dispenser that dispensed this
            ResourceDictionaryEnumerator.</param>
            <param name="predicate">A predicate used to determine which
            ResourceDictionaries to return.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ResourceDictionaryDispenserParentChanged">
            <summary>
            Called when the parent has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.GetIndexOfNextSuitableResourceDictionary(System.Int32)">
            <summary>
            Returns the index of the next suitable style in the list.
            </summary>
            <param name="startIndex">The index at which to start looking.</param>
            <returns>The index of the next suitable ResourceDictionary.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ResourceDictionaryDispenserResetting">
            <summary>
            Resets the dispenser.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.Predicate">
            <summary>
            Gets or sets a predicate that returns a value indicating whether a 
            ResourceDictionary should be returned by this enumerator.
            </summary>
            <returns>A value indicating whether a ResourceDictionary can be returned by this
            enumerator.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ResourceDictionaryDispenserResourceDictionaryDispensed(System.Object,System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs)">
            <summary>
            This method is invoked when one of the related enumerator's
            dispenses.  The enumerator checks to see if the item
            dispensed would've been the next item it would have returned.  If
            so it updates it's index to the position after the previously
            returned item.
            </summary>
            <param name="sender">The ResourceDictionaryDispenser.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.OnStyleDispensed(System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs)">
            <summary>
            Raises the EnumeratorResourceDictionaryDispensed.
            </summary>
            <param name="args">Information about the ResourceDictionary dispensed.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ResourceDictionaryDispenser">
            <summary>
            Gets the dispenser that dispensed this enumerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.Current">
            <summary>
            Gets the current ResourceDictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current ResourceDictionary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.MoveNext">
            <summary>
            Moves to the next ResourceDictionary.
            </summary>
            <returns>A value indicating whether there are any more suitable
            ResourceDictionary.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.ShouldRetrieveFromParentEnumerator">
            <summary>
            Gets a value indicating whether a enumerator should return ResourceDictionaries
            from its parent enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ResourceDictionaryEnumerator.Dispose">
            <summary>
            Stops listening to the dispenser.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AreaSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.Geometry">
            <summary>
            Gets the geometry property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GeometryProperty">
            <summary>
            Identifies the Geometry dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.PathStyle">
            <summary>
            Gets or sets the style of the Path object that follows the data 
            points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.PathStyleProperty">
            <summary>
            Identifies the PathStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.#cctor">
            <summary>
            Initializes the static members of the AreaSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.UpdateShapeFromPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Updates the Series shape object from a collection of Points.
            </summary>
            <param name="points">Collection of Points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Remove value margins from the side of the data points to ensure
            that area chart is flush against the edge of the chart.
            </summary>
            <param name="consumer">The value margin consumer.</param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the axis to which the series is anchored.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.AnchoredAxis">
            <summary>
            Gets the axis to which the series is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BarSeries">
            <summary>
            Represents a control that contains a data series to be rendered in bar format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal category axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates each point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BubbleSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.  A third binding determines the size of the data point.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.MaximumBubbleSizeAsRatioOfSmallestDimension">
            <summary>
            The maximum bubble size as a ratio of the smallest dimension.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries._sizeValueBinding">
            <summary>
            The binding used to identify the size value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.SizeValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the size of the bubble.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.SizeValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the size of the bubble.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries._rangeOfActualSizeValues">
            <summary>
            Stores the range of ActualSize values for the BubbleDataPoints.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the bubble series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.CreateDataPoint">
            <summary>
            Creates a new instance of bubble data point.
            </summary>
            <returns>A new instance of bubble data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Prepares a bubble data point by binding the size value binding to
            the size property.
            </summary>
            <param name="dataPoint">The data point to prepare.</param>
            <param name="dataContext">The data context of the data point.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attaches size change and actual size change event handlers to the
            data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches size change and actual size change event handlers from the
            data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.BubbleDataPointActualSizePropertyChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates all data points when the actual size property of a data 
            point changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.BubbleDataPointSizePropertyChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Animates the value of the ActualSize property to the size property
            when it changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnBeforeUpdateDataPoints">
            <summary>
            Calculates the range of ActualSize values of all active BubbleDataPoints.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Ensure that if any data points are updated, all data points are 
            updated.
            </summary>
            <param name="dataPoints">The data points to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the data point's visual representation.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnAfterUpdateDataPoints">
            <summary>
            Updates the value margins after all data points are updated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">BubbleSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.IndependentAxis">
            <summary>
            Gets or sets independent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">BubbleSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            The margins required for each value.
            </summary>
            <param name="consumer">The consumer to return the value margins for.</param>
            <returns>A sequence of margins for each value.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">CandlestickSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.ActualIndependentRangeAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.IndependentRangeAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.IndependentRangeAxisProperty">
            <summary>
            Identifies the IndependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.OnIndependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">CandlestickSeries that changed its IndependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.OnIndependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            IndependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.CreateDataPoint">
            <summary>
            Creates a new Candlestick data point.
            </summary>
            <returns>A Candlestick data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CandlestickSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            This method updates a single data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1">
            <summary>
            This series serves as the base class for the column and bar series.
            </summary>
            <typeparam name="T">The type of the data point.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.IndependentAxis">
            <summary>
            Gets or sets the independent category axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1._categoriesWithMultipleDataPoints">
            <summary>
            Keeps a list of DataPoints that share the same category.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetDataPointGroup(System.Object)">
            <summary>
            Returns the group of data points in a given category.
            </summary>
            <param name="category">The category for which to return the data
            point group.</param>
            <returns>The group of data points in a given category.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetIsDataPointGrouped(System.Object)">
            <summary>
            Returns a value indicating whether a data point corresponding to
            a category is grouped.
            </summary>
            <param name="category">The category.</param>
            <returns>A value indicating whether a data point corresponding to
            a category is grouped.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1._dataPointlength">
            <summary>
            The length of each data point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a category axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.#ctor">
            <summary>
            Initializes a new instance of the ColumnBarBaseSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnBeforeUpdateDataPoints">
            <summary>
            Method run before DataPoints are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Updates a data point when its actual dependent value has changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.RedrawOtherSeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Redraws other column series to assure they allocate the right amount
            of space for their columns.
            </summary>
            <param name="seriesHost">The series host to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Redraw other column series when removed from a series host.
            </summary>
            <param name="oldValue">The old value of the series host property.</param>
            <param name="newValue">The new value of the series host property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.CreateDataPoint">
            <summary>
            Creates the bar data point.
            </summary>
            <returns>A bar data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.CalculateDataPointLength">
            <summary>
            Calculates the length of the data points.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetCategoryRange(System.Object)">
            <summary>
            Gets a range in which to render a data point.
            </summary>
            <param name="category">The category to retrieve the range for.
            </param>
            <returns>The range in which to render a data point.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the axis to which the data is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnSeries">
            <summary>
            Represents a control that contains a data series to be rendered in column format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal category axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates each point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries">
            <summary>
            Control that displays values as an area chart visualization.
            </summary>
            <remarks>
            Based on the DefinitionSeries hierarchy.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.PathStyleName">
            <summary>
            Name of the PathStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries._definition">
            <summary>
            Field storing the single SeriesDefinition used by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.IndependentValueGroups">
            <summary>
            Gets a sequence of IndependentValueGroups.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DependentRangeAxis">
            <summary>
            Gets or sets the IRangeAxis to use as the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.Title">
            <summary>
            Gets or sets the title of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DataPointStyle">
            <summary>
            Gets or sets the Style to use for the DataPoints of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.LegendItemStyle">
            <summary>
            Gets or sets the Style to use for the LegendItem of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.PathStyle">
            <summary>
            Gets or sets the Style to use for the Path of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.PathStyleProperty">
            <summary>
            Identifies the PathStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.AreaSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries">
            <summary>
            Control that displays values as a bar chart visualization.
            </summary>
            <remarks>
            Based on the DefinitionSeries hierarchy.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries._definition">
            <summary>
            Field storing the single SeriesDefinition used by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DependentRangeAxis">
            <summary>
            Gets or sets the IRangeAxis to use as the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.Title">
            <summary>
            Gets or sets the title of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DataPointStyle">
            <summary>
            Gets or sets the Style to use for the DataPoints of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.LegendItemStyle">
            <summary>
            Gets or sets the Style to use for the LegendItem of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.BarSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries">
            <summary>
            Control that displays values as a column chart visualization.
            </summary>
            <remarks>
            Based on the DefinitionSeries hierarchy.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries._definition">
            <summary>
            Field storing the single SeriesDefinition used by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DependentRangeAxis">
            <summary>
            Gets or sets the IRangeAxis to use as the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.Title">
            <summary>
            Gets or sets the title of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DataPointStyle">
            <summary>
            Gets or sets the Style to use for the DataPoints of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.LegendItemStyle">
            <summary>
            Gets or sets the Style to use for the LegendItem of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ColumnSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries">
            <summary>
            Control that displays values as an line chart visualization.
            </summary>
            <remarks>
            Based on the DefinitionSeries hierarchy.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.PolylineStyleName">
            <summary>
            Name of the PolylineStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries._definition">
            <summary>
            Field storing the single SeriesDefinition used by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.IndependentValueGroups">
            <summary>
            Gets a sequence of IndependentValueGroups.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DependentRangeAxis">
            <summary>
            Gets or sets the IRangeAxis to use as the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.Title">
            <summary>
            Gets or sets the title of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DataPointStyle">
            <summary>
            Gets or sets the Style to use for the DataPoints of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.LegendItemStyle">
            <summary>
            Gets or sets the Style to use for the LegendItem of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.PolylineStyle">
            <summary>
            Gets or sets the Style to use for the Path of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.PolylineStyleProperty">
            <summary>
            Identifies the PolylineStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.LineSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries">
            <summary>
            Control that displays values as a scatter chart visualization.
            </summary>
            <remarks>
            Based on the DefinitionSeries hierarchy.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries._definition">
            <summary>
            Field storing the single SeriesDefinition used by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.UpdateShape(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{System.Windows.Point}})">
            <summary>
            Updates the shape for the series.
            </summary>
            <param name="definitionPoints">Locations of the points of each SeriesDefinition in the series.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.IndependentValueGroups">
            <summary>
            Gets a sequence of IndependentValueGroups.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the dependent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding path that identifies the independent values of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DependentRangeAxis">
            <summary>
            Gets or sets the IRangeAxis to use as the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.Title">
            <summary>
            Gets or sets the title of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DataPointStyle">
            <summary>
            Gets or sets the Style to use for the DataPoints of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.LegendItemStyle">
            <summary>
            Gets or sets the Style to use for the LegendItem of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Compatible.ScatterSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Compatible.SelectionEnabledToSelectionModeConverter">
            <summary>
            Converts from a true/false value indicating whether selection is enabled to a SeriesSelectionMode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.SelectionEnabledToSelectionModeConverter.#ctor">
            <summary>
            Initializes a new instance of the SelectionEnabledToSelectionModeConverter class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.SelectionEnabledToSelectionModeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Compatible.SelectionEnabledToSelectionModeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSeries">
            <summary>
            Represents a control that contains a dynamic data series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotAreaName">
            <summary>
            The name of the template part with the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DataPointStyleName">
            <summary>
            The name of the DataPointStyle property and ResourceDictionary entry.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyleName">
            <summary>
            The name of the LegendItemStyle property and ResourceDictionary entry.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ActualLegendItemStyleName">
            <summary>
            The name of the ActualLegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectionChangedEvent">
            <summary>
            Event that is raised when selection is changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._storyBoardQueue">
            <summary>
            Queue of hide/reveal storyboards to play.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._dependentValueBinding">
            <summary>
            The binding used to identify the dependent value binding.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the dependent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._dataPointsByObject">
            <summary>
            Data points collection sorted by object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the dependent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._independentValueBinding">
            <summary>
            The binding used to identify the independent value binding.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSource">
            <summary>
            Gets or sets a collection used to contain the data points of the Series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed callback.
            </summary>
            <param name="o">Series for which the ItemsSource changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the ItemsSource property changes.
            </summary>
            <param name="oldValue">Old value of the ItemsSource property.</param>
            <param name="newValue">New value of the ItemsSource property.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequence">
            <summary>
            Gets or sets the animation sequence to use for the DataPoints of the Series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ActiveDataPoints">
            <summary>
            Gets a stream of the active data points in the plot area.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ActiveDataPointCount">
            <summary>
            Gets the number of active data points in the plot area.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function to use when transitioning the
            data points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether elements in the series can
            be selected.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnIsSelectionEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="d">DynamicSeries that changed its IsSelectionEnabled.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnIsSelectionEnabledPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequenceProperty">
            <summary>
            Identifies the AnimationSequence dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._weakEventListener">
            <summary>
            WeakEventListener used to handle INotifyCollectionChanged events.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._plotArea">
            <summary>
            The plot area canvas.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotArea">
            <summary>
            Gets the plot area canvas.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotAreaSize">
            <summary>
            Gets the size of the plot area.
            </summary>
            <remarks>
            Use this method instead of PlotArea.ActualWidth/ActualHeight
            because the ActualWidth and ActualHeight properties are set after
            the SizeChanged handler runs.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectionChanged">
            <summary>
            Event raised when selection has changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._processingOnSelectedItemPropertyChanged">
            <summary>
            Tracks whether a call to OnSelectedItemPropertyChanged is already in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the SelectedItem property changes.
            </summary>
            <param name="d">DynamicSeries that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSelectedItemPropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the SelectedItem property changes.
            </summary>
            <param name="oldValue">The old selected index.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TemplateApplied">
            <summary>
            Gets or sets a value indicating whether the template has been
            applied.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DataPointStyle">
            <summary>
            Gets or sets the style to use for the data points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DataPointStyleProperty property changed handler.
            </summary>
            <param name="d">DataPointSingleSeriesWithAxes that changed its DataPointStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            DataPointStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyle">
            <summary>
            Gets or sets the style to use for the legend items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnLegendItemStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LegendItemStyleProperty property changed handler.
            </summary>
            <param name="d">DataPointSeries that changed its LegendItemStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnLegendItemStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when the value of the LegendItemStyle property changes.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ClipGeometry">
            <summary>
            Gets or sets the Geometry used to clip DataPoints to the PlotArea bounds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._needRefreshWhenSizeChanged">
            <summary>
            Indicates whether a call to Refresh is required when the control's
            size changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionDuration">
            <summary>
            Gets or sets the duration of the value Transition animation.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.#cctor">
            <summary>
            Initializes the static members of the DataPointSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.#ctor">
            <summary>
            Initializes a new instance of the DataPointSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AddObject(System.Object)">
            <summary>
            Adds an object to the series host by creating a corresponding data point
            for it.
            </summary>
            <param name="dataContext">The object to add to the series host.</param>
            <returns>The data point created for the object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ShouldCreateDataPoint(System.Object)">
            <summary>
            Returns whether a data point should be created for the data context.
            </summary>
            <param name="dataContext">The data context that will be used for the
            data point.</param>
            <returns>A value indicating whether a data point should be created
            for the data context.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.GetInsertionIndex(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Returns the index at which to insert data point in the plot area
            child collection.
            </summary>
            <param name="dataPoint">The data point to retrieve the insertion
            index for.</param>
            <returns>The insertion index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AddDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Adds a data point to the plot area.
            </summary>
            <param name="dataPoint">The data point to add to the plot area.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.GetDataPoint(System.Object)">
            <summary>
            Retrieves the data point corresponding to the object passed as the
            parameter.
            </summary>
            <param name="dataContext">The data context used for the point.
            </param>
            <returns>The data point associated with the object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateAndPrepareDataPoint(System.Object)">
            <summary>
            Creates and prepares a data point.
            </summary>
            <param name="dataContext">The object to use as the data context
            of the data point.</param>
            <returns>The newly created data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateDataPoint">
            <summary>
            Returns a Control suitable for the Series.
            </summary>
            <returns>The DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateLegendItem(System.Windows.Controls.DataVisualization.Charting.DataPointSeries)">
            <summary>
            Creates a legend item.
            </summary>
            <returns>A legend item for insertion in the legend items collection.
            </returns>
            <param name="owner">The owner of the new LegendItem.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LoadDataPoints(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Updates data points collection with items retrieved from items
            source and removes the old items.
            </summary>
            <param name="newItems">The items to load.</param>
            <param name="oldItems">The items to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnApplyTemplate">
            <summary>
            Attaches handler plot area after loading it from XAML.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.InvokeOnLayoutUpdated(System.Action)">
            <summary>
            Invokes an action when the plot area's layout is updated.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Handles changes to the SeriesHost property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceCollectionChanged(System.Collections.IEnumerable,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method called when the ItemsSource collection changes.
            </summary>
            <param name="collection">New value of the collection.</param>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnPlotAreaChanged(System.Windows.Controls.Panel,System.Windows.Controls.Panel)">
            <summary>
            Removes items from the existing plot area and adds items to new
            plot area.
            </summary>
            <param name="oldValue">The previous plot area.</param>
            <param name="newValue">The new plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the visual appearance of all the data points when the size
            changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Refresh">
            <summary>
            Refreshes data from data source and renders the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.RemoveObject(System.Object)">
            <summary>
            Removes an object from the series host by removing its corresponding
            data point.
            </summary>
            <param name="dataContext">The object to remove from the series data
            source.</param>
            <returns>The data point corresponding to the removed object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.RemoveDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Removes a data point from the plot area.
            </summary>
            <param name="dataPoint">The data point to remove.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdatingDataPoints">
            <summary>
            Gets a value indicating whether all data points are being
            updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Updates the visual representation of all data points in the plot
            area.
            </summary>
            <param name="dataPoints">A sequence of data points to update.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AttachEventHandlersToDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Attaches event handlers to the data points.
            </summary>
            <param name="dataPoints">A sequence of data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DetachEventHandlersFromDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Detaches event handlers from the data points.
            </summary>
            <param name="dataPoints">A sequence of data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attaches event handlers to a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Unselect(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Unselects a data point.
            </summary>
            <param name="dataPoint">The data point to unselect.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Select(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Selects a data point.
            </summary>
            <param name="dataPoint">The data point to select.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIsSelectedChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Method executed when a data point is either selected or unselected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches event handlers from a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnBeforeUpdateDataPoints">
            <summary>
            This method that executes before data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnAfterUpdateDataPoints">
            <summary>
            This method that executes after data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the visual representation of a single data point in the plot
            area.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Prepares a data point by extracting binding it to a data context
            object.
            </summary>
            <param name="dataPoint">A data point.</param>
            <param name="dataContext">A data context object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.StaggeredStateChange(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Int32,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Reveals data points using a storyboard.
            </summary>
            <param name="dataPoints">The data points to change the state of.
            </param>
            <param name="dataPointCount">The number of data points in the sequence.</param>
            <param name="newState">The state to change to.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStateChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.DataPointState})">
            <summary>
            Handles data point state property change.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStateChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Windows.Controls.DataVisualization.Charting.DataPointState,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Handles data point state property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles data point actual dependent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Handles data point actual dependent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles data point actual independent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Handles data point actual independent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles data point dependent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Handles data point dependent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles data point independent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Handles data point independent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.GetResourceDictionaryWithTargetType(System.Windows.Controls.DataVisualization.IResourceDictionaryDispenser,System.Type,System.Boolean)">
            <summary>
            Returns a ResourceDictionaryEnumerator that returns ResourceDictionaries with a
            DataPointStyle having the specified TargetType or with a TargetType that is an
            ancestor of the specified type.
            </summary>
            <param name="dispenser">The ResourceDictionaryDispenser.</param>
            <param name="targetType">The TargetType.</param>
            <param name="takeAncestors">A value indicating whether to accept ancestors of the TargetType.</param>
            <returns>A ResourceDictionary enumerator.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes">
            <summary>
            Represents a dynamic series that uses axes to display data points.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.DataPointsByActualDependentValue">
            <summary>
            Gets or sets the data points by dependent value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.CreateRangeAxisFromData(System.Object)">
            <summary>
            Creates the correct range axis based on the data.
            </summary>
            <param name="value">The value to evaluate to determine which type of
            axis to create.</param>
            <returns>The range axis appropriate that can plot the provided
            value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetActualDataPointAxisValue(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Retrieves the value for a given access from a data point.
            </summary>
            <param name="dataPoint">The data point to retrieve the value from.</param>
            <param name="axis">The axis to retrieve the value for.</param>
            <returns>A function that returns a value appropriate for the axis
            when provided a DataPoint.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalActualDependentAxis">
            <summary>
            Gets or sets the actual dependent axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes._internalDependentAxis">
            <summary>
            Stores the internal dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalDependentAxis">
            <summary>
            Gets or sets the value of the internal dependent axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnInternalDependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            DependentAxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalActualIndependentAxis">
            <summary>
            Gets or sets the actual independent axis value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes._internalIndependentAxis">
            <summary>
            The internal independent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalIndependentAxis">
            <summary>
            Gets or sets the value of the internal independent axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnInternalIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.#ctor">
            <summary>
            Initializes a new instance of the DataPointSeriesWithAxes class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Update the axes when the specified data point's ActualDependentValue property changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Update the axes when the specified data point's DependentValue property changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateActualDependentAxis">
            <summary>
            Update axes when the specified data point's effective dependent value changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointActualIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Update axes when the specified data point's actual independent value changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Update axes when the specified data point's independent value changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateActualIndependentAxis">
            <summary>
            Update axes when a data point's effective independent value changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdatingAllAxes">
            <summary>
            Gets or sets a value indicating whether to the axes are being 
            updated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.AxesInvalidated">
            <summary>
            Gets or sets a value indicating whether the axes have been 
            invalidated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Only updates all data points if series has axes.
            </summary>
            <param name="dataPoints">A sequence of data points to update.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes">
            <summary>
            Method called to get series to acquire the axes it needs.  Acquires
            no axes by default.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Method called to get series to acquire the axes it needs.  Acquires
            no axes by default.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis})">
            <summary>
            Method called to get the axes that the series needs.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
            <param name="independentAxisPredicate">A predicate that returns
            a value indicating whether an axis is an acceptable candidate for
            the series independent axis.</param>
            <param name="independentAxisFactory">A function that creates an
            acceptable independent axis.</param>
            <param name="dependentAxisPredicate">A predicate that returns
            a value indicating whether an axis is an acceptable candidate for
            the series dependent axis.</param>
            <param name="dependentAxisFactory">A function that creates an
            acceptable dependent axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IAxisListener#AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Updates data points when the axis is invalidated.
            </summary>
            <param name="axis">The axis that was invalidated.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the actual range of data for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the range for.</param>
            <returns>The actual range of data.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IDataProvider#GetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Returns data to a data consumer.
            </summary>
            <param name="dataConsumer">The data consumer requesting the data.
            </param>
            <returns>The data for a given data consumer.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Called when the value of the SeriesHost property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IRangeProvider#GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the data range.
            </summary>
            <param name="rangeConsumer">The consumer requesting the range.</param>
            <returns>The data range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IValueMarginProvider#GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="axis">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes">
            <summary>
            A dynamic series with axes and only one legend item and style for all 
            data points.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualDataPointStyleName">
            <summary>
            Name of the ActualDataPointStyle property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.LegendItem">
            <summary>
            Gets the single legend item associated with the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes._legendItem">
            <summary>
            Stores the LegendItem for the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.PaletteResources">
            <summary>
            Gets the Palette-dispensed ResourceDictionary for the Series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.CustomTitleInUse">
            <summary>
            Gets or sets a value indicating whether a custom title is in use.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnDataPointStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            DataPointStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualDataPointStyle">
            <summary>
            Gets or sets the actual style used for the data points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualDataPointStyleProperty">
            <summary>
            Identifies the ActualDataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualLegendItemStyle">
            <summary>
            Gets or sets the actual style used for the legend item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualLegendItemStyleProperty">
            <summary>
            Identifies the ActualLegendItemStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnLegendItemStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when the value of the LegendItemStyle property changes.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndex">
            <summary>
            Gets the index of the series in the Parent's series collection.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndexProperty">
            <summary>
            Identifies the GlobalSeriesIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnGlobalSeriesIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            GlobalSeriesIndexProperty property changed handler.
            </summary>
            <param name="d">Series that changed its Index.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnGlobalSeriesIndexPropertyChanged(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            GlobalSeriesIndexProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnTitleChanged(System.Object,System.Object)">
            <summary>
            Called when the Title property changes.
            </summary>
            <param name="oldValue">Old value of the Title property.</param>
            <param name="newValue">New value of the Title property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.#ctor">
            <summary>
            Initializes a new instance of the DataPointSingleSeriesWithAxes class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnPlotAreaChanged(System.Windows.Controls.Panel,System.Windows.Controls.Panel)">
            <summary>
            Insert grid containing data point used for legend item into the 
            plot area.
            </summary>
            <param name="oldValue">The old plot area.</param>
            <param name="newValue">The new plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            When the series host property is set retrieves a style to use for all the
            data points.
            </summary>
            <param name="oldValue">The old series host value.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.CreateLegendItemDataPoint">
            <summary>
            Creates the LegendItem Control if conditions are right.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Sets the style of the data point to the single style used for all
            data points.
            </summary>
            <param name="dataPoint">The data point to apply the style to.
            </param>
            <param name="dataContext">The object associated with the data point.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            This method updates the global series index property.
            </summary>
            <param name="globalIndex">The global index of the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.SeriesHostResourceDictionariesChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SeriesHost's ResourceDictionariesChanged event.
            </summary>
            <param name="sender">ISeriesHost instance.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.DispensedResourcesChanging">
            <summary>
            Processes the change of the DispensedResources property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries">
            <summary>
            Implements a series that is defined by one or more instances of the DefinitionSeries class.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesAreaName">
            <summary>
            Name of the SeriesArea property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ItemContainerName">
            <summary>
            Name of the ItemContainer property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IsStacked100">
            <summary>
            Gets or sets a value indicating whether the series is 100% stacked (versus normally stacked).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItems">
            <summary>
            Gets the collection of DataItems representing the data of the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesArea">
            <summary>
            Gets the SeriesArea template part instance.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._legendItems">
            <summary>
            Stores an aggregated collection of legend items from the series definitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._seriesDefinitions">
            <summary>
            Stores the collection of SeriesDefinitions that define the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._seriesDefinitionsAsISeries">
            <summary>
            Stores a mirror collection of ISeries corresponding directly to the collection of SeriesDefinitions.
            </summary>
            <remarks>
            Not using ObservableCollectionListAdapter because of race condition on ItemsChanged event
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._seriesAreaChildrenListAdapter">
            <summary>
            Keeps the SeriesDefinitions collection synchronized with the Children collection of the SeriesArea.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._clipGeometry">
            <summary>
            Stores the clip geometry for the ItemContainer.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._itemContainer">
            <summary>
            Stores a reference to the ItemContainer template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._queueUpdateDataItemPlacement_DataItems">
            <summary>
            Tracks the collection of DataItem that are queued for update.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._queueUpdateDataItemPlacement_DependentAxisValuesChanged">
            <summary>
            Tracks whether the dependent axis values changed for the next update.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._queueUpdateDataItemPlacement_IndependentAxisValuesChanged">
            <summary>
            Tracks whether the independent axis values changed for the next update.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._selectedItems">
            <summary>
            Stores a reference to the backing collection for the SelectedItems property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._synchronizingSelectedItems">
            <summary>
            Tracks whether the SelectedItems collection is being synchronized (to prevent reentrancy).
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.#cctor">
            <summary>
            Performs one-time initialization of DefinitionSeries data.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.#ctor">
            <summary>
            Initializes a new instance of the DefinitionSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DependentAxis">
            <summary>
            Gets or sets the dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DependentAxisProperty">
            <summary>
            Identifies the DependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnDependentAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DependentAxis dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnDependentAxisChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Handles changes to the DependentAxis property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentAxis">
            <summary>
            Gets or sets the independent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnIndependentAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IndependentAxis dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnIndependentAxisChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Handles changes to the IndependentAxis property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ActualDependentAxis">
            <summary>
            Gets the rendered dependent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ActualDependentAxisProperty">
            <summary>
            Identifies the ActualDependentAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ActualIndependentAxis">
            <summary>
            Gets the rendered independent axis of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ActualIndependentAxisProperty">
            <summary>
            Identifies the ActualIndependentAxis dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ActualDependentRangeAxis">
            <summary>
            Gets the ActualDependentAxis as an IRangeAxis instance.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.LegendItems">
            <summary>
            Gets the collection of legend items for the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesHost">
            <summary>
            Gets or sets the SeriesHost for the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries._seriesHost">
            <summary>
            Stores the SeriesHost for the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesDefinitions">
            <summary>
            Gets or sets the collection of SeriesDefinitions that define the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionMode">
            <summary>
            Gets or sets the SelectionMode property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the SelectionMode dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnSelectionModeChanged(System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode,System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode)">
            <summary>
            Handles changes to the SelectionMode property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedIndex">
            <summary>
            Gets or sets the SelectedIndex property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItem">
            <summary>
            Gets or sets the SelectedItem property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItems">
            <summary>
            Gets the currently selected items.
            </summary>
            <remarks>
            This property is meant to be used when SelectionMode is Multiple. If the selection mode is Single the correct property to use is SelectedItem.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the SelectedItems collection.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ItemContainerSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the ItemContainer class.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionChanged">
            <summary>
            Occurs when the selection of a DefinitionSeries changes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged routed event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.OnApplyTemplate">
            <summary>
            Builds the visual tree for the control when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.PrepareContainerForItem(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ClearContainerForItem(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the PrepareContainerForItemOverride method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Prepares a DataPoint for use.
            </summary>
            <param name="dataPoint">DataPoint instance.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.InternalCreateDataPoint">
            <summary>
            Provides an internally-accessible wrapper for calling CreateDataPoint.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ItemContainerSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event of the ItemContainer.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItemFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Returns the DataItem corresponding to the specified DataPoint.
            </summary>
            <param name="dataPoint">Specified DataPoint.</param>
            <returns>Corresponding DataItem.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataPointDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles the DependentValueChanged event of a DataPoint.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataPointActualDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles the ActualDependentValueChanged event of a DataPoint.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataPointIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles the IndependentValueChanged event of a DataPoint.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataPointActualIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles the ActualIndependentValueChanged event of a DataPoint.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataPointStateChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.DataPointState})">
            <summary>
            Handles the StateChanged event of a DataPoint.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.NotifyAxisValuesChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Notifies the specified axis of changes to values plotting against it.
            </summary>
            <param name="axis">Specified axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.NotifyValueMarginsChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.ValueMargin})">
            <summary>
            Notifies the specified axis of changes to value margins plotting against it.
            </summary>
            <param name="axis">Specified axis.</param>
            <param name="valueMargins">Sequence of value margins that have changed.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesDefinitionsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the SeriesDefinitions collection.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesDefinitionsCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Collections.IList,System.Int32)">
            <summary>
            Handles the CollectionChanged event of the SeriesDefinitions collection.
            </summary>
            <param name="action">Type of change.</param>
            <param name="oldItems">Sequence of old items.</param>
            <param name="oldStartingIndex">Starting index of old items.</param>
            <param name="newItems">Sequence of new items.</param>
            <param name="newStartingIndex">Starting index of new items.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.UpdatePaletteProperties(System.Windows.Controls.DataVisualization.Charting.SeriesDefinition)">
            <summary>
            Updates the palette properties of the specified SeriesDefinition.
            </summary>
            <param name="definition">Specified SeriesDefinition.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesDefinitionItemsSourceChanged(System.Windows.Controls.DataVisualization.Charting.SeriesDefinition,System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Handles changes to the ItemsSource of a SeriesDefinition.
            </summary>
            <param name="definition">SeriesDefinition owner.</param>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesDefinitionItemsSourceCollectionChanged(System.Windows.Controls.DataVisualization.Charting.SeriesDefinition,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Collections.IList,System.Int32)">
            <summary>
            Handles changes to the ItemsSource collection  of a SeriesDefinition.
            </summary>
            <param name="definition">SeriesDefinition owner.</param>
            <param name="action">Type of change.</param>
            <param name="oldItems">Sequence of old items.</param>
            <param name="oldStartingIndex">Starting index of old items.</param>
            <param name="newItems">Sequence of new items.</param>
            <param name="newStartingIndex">Starting index of new items.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SeriesHostResourceDictionariesChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ResourceDictionariesChanged event of the SeriesHost owner.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.AddDataItems(System.Windows.Controls.DataVisualization.Charting.SeriesDefinition,System.Collections.Generic.IEnumerable{System.Object},System.Int32)">
            <summary>
            Creates and adds DataItems for the specified SeriesDefinition's items.
            </summary>
            <param name="definition">Specified SeriesDefinition.</param>
            <param name="items">Sequence of items.</param>
            <param name="startingIndex">Starting index.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.AddedDataItems">
            <summary>
            Updates the axes after DataItems have been added.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.RemovedDataItems">
            <summary>
            Notifies the axes after DataItems have been removed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.EnsureAxes(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Ensures that suitable axes are present and registered.
            </summary>
            <param name="updateDependentAxis">True if the dependent axis needs to be updated.</param>
            <param name="updateIndependentAxis">True if the independent axis needs to be updated.</param>
            <param name="unconditionallyNotifyAxes">True if both axis are to be notified unconditionally.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.AcquireDependentAxis">
            <summary>
            Acquires a dependent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.AcquireIndependentAxis">
            <summary>
            Acquires an independent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#IAxisListener#AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Handles notification of the invalidation of an axis.
            </summary>
            <param name="axis">Invalidated axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.QueueUpdateDataItemPlacement(System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Queues an update of DataItem placement for the next update opportunity.
            </summary>
            <param name="dependentAxisValuesChanged">True if the dependent axis values have changed.</param>
            <param name="independentAxisValuesChanged">True if the independent axis values have changed.</param>
            <param name="dataItems">Sequence of DataItems to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called when the control needs to arrange its children.
            </summary>
            <param name="arrangeBounds">Bounds to arrange within.</param>
            <returns>Arranged size.</returns>
            <remarks>
            Used as a good place to dequeue queued work.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.UpdateDataItemPlacement(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Updates the placement of the DataItems (data points) of the series.
            </summary>
            <param name="dataItems">DataItems in need of an update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#IRangeProvider#GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range for the data points of the series.
            </summary>
            <param name="rangeConsumer">Consumer of the range.</param>
            <returns>Range of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IRangeProviderGetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range for the data points of the series.
            </summary>
            <param name="rangeConsumer">Consumer of the range.</param>
            <returns>Range of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#IValueMarginProvider#GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for the data points of the series.
            </summary>
            <param name="valueMarginConsumer">Consumer of the value margins.</param>
            <returns>Sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IValueMarginProviderGetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for the data points of the series.
            </summary>
            <param name="valueMarginConsumer">Consumer of the value margins.</param>
            <returns>Sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#IDataProvider#GetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Returns the data for the data points of the series.
            </summary>
            <param name="dataConsumer">Consumer of the data.</param>
            <returns>Sequence of data.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IDataProviderGetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Returns the data for the data points of the series.
            </summary>
            <param name="dataConsumer">Consumer of the data.</param>
            <returns>Sequence of data.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroups">
            <summary>
            Gets a sequence of IndependentValueGroups.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroupsOrderedByIndependentValue">
            <summary>
            Gets a sequence of IndependentValueGroups ordered by independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueDependentValues">
            <summary>
            Gets a sequence of sequences of the dependent values associated with each independent value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroup">
            <summary>
            Represents an independent value and the dependent values that are associated with it.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroup.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Initializes a new instance of the IndependentValueGroup class.
            </summary>
            <param name="independentValue">Independent value.</param>
            <param name="dataItems">Associated DataItems.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroup.IndependentValue">
            <summary>
            Gets the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroup.DataItems">
            <summary>
            Gets a sequence of DataItems associated with the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.IndependentValueGroup.Denominator">
            <summary>
            Gets or sets the denominator to use when computing with this instance.
            </summary>
            <remarks>
            Exists here purely to simplify the the corresponding algorithm.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem">
            <summary>
            Represents a single data value from a SeriesDefinition's ItemsSource.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem._bindingHelper">
            <summary>
            Stores a reference to a shared BindingHelper instance.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.#ctor(System.Windows.Controls.DataVisualization.Charting.SeriesDefinition)">
            <summary>
            Initializes a new instance of the DataItem class.
            </summary>
            <param name="seriesDefinition">SeriesDefinition owner.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.SeriesDefinition">
            <summary>
            Gets the SeriesDefinition owner of the DataItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.Value">
            <summary>
            Gets or sets the value of the DataItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem._value">
            <summary>
            Stores the value of the DataItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.Index">
            <summary>
            Gets or sets the index of the DataItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.DataPoint">
            <summary>
            Gets or sets the DataPoint associated with the DataItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.Container">
            <summary>
            Gets or sets the container for the DataPoint within its parent ItemsControl.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.ActualDependentValue">
            <summary>
            Gets the ActualDependentValue of the DataPoint (or its equivalent).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.ActualIndependentValue">
            <summary>
            Gets the ActualIndependentValue of the DataPoint (or its equivalent).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.ActualStackedDependentValue">
            <summary>
            Gets or sets the ActualDependentValue of the DataPoint after adjusting for applicable stacking.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem.CenterPoint">
            <summary>
            Gets or sets the center-point of the DataPoint in plot area coordinates (if relevant).
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.BindingHelper">
            <summary>
            Provides an easy way to evaluate a Binding against a source instance.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.BindingHelper.#ctor">
            <summary>
            Initializes a new instance of the BindingHelper class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.BindingHelper.ResultProperty">
            <summary>
            Identifies the Result dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.BindingHelper.EvaluateBinding(System.Windows.Data.Binding,System.Object)">
            <summary>
            Evaluates a Binding against a source instance.
            </summary>
            <param name="binding">Binding to evaluate.</param>
            <param name="instance">Source instance.</param>
            <returns>Result of Binding on source instance.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemToDataItemConverter">
            <summary>
            Converts from a selected item to the corresponding DataItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemToDataItemConverter._dataItems">
            <summary>
            Stores a reference to the DataItem collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemToDataItemConverter.#ctor(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Initializes a new instance of the SelectedItemToDataItemConverter class.
            </summary>
            <param name="dataItems">Collection of DataItems.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemToDataItemConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectedItemToDataItemConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionModeToSelectionEnabledConverter">
            <summary>
            Converts from a SeriesSelectionMode to a true/false value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionModeToSelectionEnabledConverter.#ctor">
            <summary>
            Initializes a new instance of the SelectionModeToSelectionEnabledConverter class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionModeToSelectionEnabledConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.SelectionModeToSelectionEnabledConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Axes">
            <summary>
            Gets the axes for the series as a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Series">
            <summary>
            Gets the series for the series as a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#ForegroundElements">
            <summary>
            Gets the foreground elements for the series as a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#BackgroundElements">
            <summary>
            Gets the background elements for the series as a series host.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#IResourceDictionaryDispenser#GetResourceDictionariesWhere(System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Gets a IResourceDictionaryDispenser for the series as a series host.
            </summary>
            <param name="predicate">Predicate function.</param>
            <returns>Sequence of ResourceDictionaries.</returns>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.System#Windows#Controls#DataVisualization#IResourceDictionaryDispenser#ResourceDictionariesChanged">
            <summary>
            Event that is triggered when the available ResourceDictionaries change.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRequireGlobalSeriesIndex">
            <summary>
            Defines methods on classes that contain a global index.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRequireGlobalSeriesIndex.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            Occurs when a global series index changes.
            </summary>
            <param name="globalIndex">The global index that has changed.
            </param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ISeries">
            <summary>
            Represents a series in a chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeries.LegendItems">
            <summary>
            Gets a list of the legend items associated with the object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LabeledPieSeries.PieChartLabelStyle">
            <summary>
            PieChartLabelStyle DP - The style to be applied to each PieChartLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LabeledPieSeries.PieChartLabelItemTemplate">
            <summary>
            PieChartLabelItemTemplate DP - The DataTemplate to be applied to each PieChartLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LabeledPieSeries.LabelDisplayMode">
            <summary>
            LabelDisplayMode DP - Controls the mode in which the labels should appear.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LabeledPieSeries.OnAfterUpdateDataPoints">
            <summary>
            Adds the labels to each of its PieDataPoints.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LabeledPieSeries.AddLabelPieDataPoint(System.Windows.Controls.DataVisualization.Charting.PieDataPoint,System.Windows.Controls.Canvas)">
            <summary>
            Creates a new PieChartLabel control and adds it to the "LabelArea_PART" canvas.
            </summary>
            <param name="pieDataPoint">PieDataPoint that corresponds to PieChartLabel.</param>
            <param name="labelStyle">The style to be applied to the PieChartLabel.</param>
            <param name="labelArea">The canvas where PieChartLabel will be added.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LegendItem">
            <summary>
            Represents an item used by a Series in the Legend of a Chart.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LegendItem.Owner">
            <summary>
            Gets or sets the owner of the LegendItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LegendItem.#cctor">
            <summary>
            Initializes the static members of the LegendItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LegendItem.#ctor">
            <summary>
            Initializes a new instance of the LegendItem class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1">
            <summary>
            A base class that contains methods used by both the line and area series.
            </summary>
            <typeparam name="T">The type of data point used by the series.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">LineAreaBaseSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.IndependentAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">LineAreaBaseSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.DataPointsByIndependentValue">
            <summary>
            Gets data points collection sorted by independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.#ctor">
            <summary>
            Initializes a new instance of the LineAreaBaseSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnApplyTemplate">
            <summary>
            Creates a DataPoint for determining the line color.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnAfterUpdateDataPoints">
            <summary>
            This method executes after all data points have been updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Repositions line data point in the sorted collection if the actual 
            independent axis is a range axis.
            </summary>
            <param name="dataPoint">The data point that has changed.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.CreateDataPoint">
            <summary>
            Creates a new line data point.
            </summary>
            <returns>A line data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the visual representation of the data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.UpdateShape">
            <summary>
            Updates the Series shape object.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.UpdateShapeFromPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Updates the Series shape object from a collection of Points.
            </summary>
            <param name="points">Collection of Points.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.Points">
            <summary>
            Gets the collection of points that make up the line.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.PolylineStyle">
            <summary>
            Gets or sets the style of the Polyline object that follows the data 
            points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.PolylineStyleProperty">
            <summary>
            Identifies the PolylineStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.#cctor">
            <summary>
            Initializes the static members of the LineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.UpdateShapeFromPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Updates the Series shape object from a collection of Points.
            </summary>
            <param name="points">Collection of Points.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieSeries">
            <summary>
            Represents a control that contains a data series to be rendered in pie
            format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.Palette">
            <summary>
            Gets or sets a palette of ResourceDictionaries used by the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPalettePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PaletteProperty property changed handler.
            </summary>
            <param name="d">Parent that changed its Palette.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPalettePropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary})">
            <summary>
            PaletteProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries._resourceDictionaryEnumerator">
            <summary>
            The pie data point style enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.#cctor">
            <summary>
            Initializes the static members of the PieSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the PieSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnResourceDictionariesChanged(System.EventArgs)">
            <summary>
            Invokes the ResourceDictionariesChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries._dataPointLegendItems">
            <summary>
            A dictionary that links data points to their legend items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.ConvertRatioOfRotationToPoint(System.Double,System.Double,System.Double)">
            <summary>
            Accepts a ratio of a full rotation, the x and y length and returns
            the 2D point using trigonometric functions.
            </summary>
            <param name="ratio">The ratio of a full rotation [0..1].</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns>The corresponding 2D point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.AddDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Creates a legend item for each data point.
            </summary>
            <param name="dataPoint">The data point added.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.RemoveDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Removes data point's legend item when the data point is removed.
            </summary>
            <param name="dataPoint">The data point to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.CreateDataPoint">
            <summary>
            Creates a data point.
            </summary>
            <returns>A data point.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.ActivePieDataPoints">
            <summary>
            Gets the active pie data points.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnBeforeUpdateDataPoints">
            <summary>
            Updates all ratios before data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateLegendItemIndexes">
            <summary>
            Updates the indexes of all legend items when a change is made to the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateRatios">
            <summary>
            Updates the ratios of each data point.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates a data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdatePieDataPointGeometry(System.Windows.Controls.DataVisualization.Charting.PieDataPoint,System.Double,System.Double)">
            <summary>
            Updates the PieDataPoint's Geometry property.
            </summary>
            <param name="pieDataPoint">PieDataPoint instance.</param>
            <param name="plotAreaWidth">PlotArea width.</param>
            <param name="plotAreaHeight">PlotArea height.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.CreatePieLegendItem(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Int32)">
            <summary>
            Creates a legend item from a data point.
            </summary>
            <param name="dataPoint">The data point to use to create the legend item.</param>
            <param name="index">The 1-based index of the Control.</param>
            <returns>The series host legend item.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attach event handlers to a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches event handlers from a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            This method updates the global series index property.
            </summary>
            <param name="globalIndex">The global index of the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Updates the data point when the dependent value is changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Updates the data point when the independent value is changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointActualRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's actual ratio is
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointActualOffsetRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's actual offset ratio
            is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's ratio is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointOffsetRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's offset ratio is 
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.ResourceDictionaryDispenser">
            <summary>
            Gets or sets an object used to dispense styles from the style 
            palette.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieSeries.ResourceDictionariesChanged">
            <summary>
            Event that is invoked when the ResourceDictionaryDispenser's collection has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.GetResourceDictionariesWhere(System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Returns a rotating enumerator of ResourceDictionary objects that coordinates
            with the dispenser object to ensure that no two enumerators are on the same
            item. If the dispenser is reset or its collection is changed then the
            enumerators are also reset.
            </summary>
            <param name="predicate">A predicate that returns a value indicating
            whether to return an item.</param>
            <returns>An enumerator of ResourceDictionaries.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Called when the value of the SeriesHost property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.SeriesHostResourceDictionariesChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SeriesHost's ResourceDictionariesChanged event.
            </summary>
            <param name="sender">ISeriesHost instance.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            DataPointStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnLegendItemStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when the value of the LegendItemStyle property changes.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ScatterSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y scatter format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">ScatterSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.IndependentAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">ScatterSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.CreateDataPoint">
            <summary>
            Creates a new scatter data point.
            </summary>
            <returns>A scatter data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.GetResourceDictionaryEnumeratorFromHost">
            <summary>
            Returns the custom ResourceDictionary to use for necessary resources.
            </summary>
            <returns>
            ResourceDictionary to use for necessary resources.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            This method updates a single data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Series">
            <summary>
            Represents a control that contains a data series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Series.TitleName">
            <summary>
            The name of the Title property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.SeriesHost">
            <summary>
            Gets or sets the parent instance the Series belongs to.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Series._seriesHost">
            <summary>
            Stores the Parent instance the Series belongs to.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Called when the value of the SeriesHost property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.LegendItems">
            <summary>
            Gets the legend items to be added to the legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.Title">
            <summary>
            Gets or sets the title content of the Series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Series.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnTitleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TitleProperty property changed callback.
            </summary>
            <param name="o">Series for which the Title changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnTitleChanged(System.Object,System.Object)">
            <summary>
            Called when the Title property changes.
            </summary>
            <param name="oldValue">The old value of the Title property.</param>
            <param name="newValue">The new value of the Title property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.#ctor">
            <summary>
            Initializes a new instance of the Series class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition">
            <summary>
            Defines the attributes of a series that is to be rendered by the DefinitionSeries class.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataPointStyleName">
            <summary>
            Name of the DataPointStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.LegendItemStyleName">
            <summary>
            Name of the LegendItemStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataShapeStyleName">
            <summary>
            Name of the DataShapeStyle property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._legendItems">
            <summary>
            Provides the store for the ISeries.LegendItems property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._legendItem">
            <summary>
            Represents the single LegendItem corresponding to the SeriesDefinition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._weakEventListener">
            <summary>
            Keeps a reference to the WeakEventListener used to prevent leaks of collections assigned to the ItemsSource property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.Index">
            <summary>
            Gets or sets the index of the series definition.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.#ctor">
            <summary>
            Initializes a new instance of the SeriesDefinition class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ItemsSource">
            <summary>
            Gets or sets a sequence that provides the content of the series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemsSource dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Handles changes to the ItemsSource property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments..</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.AutomaticTitle">
            <summary>
            Gets or sets the automatic title of the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._automaticTitle">
            <summary>
            Stores the automatic title of the series definition.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.Title">
            <summary>
             Gets or sets the Title of the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnTitleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Title dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnTitleChanged(System.Object,System.Object)">
            <summary>
            Handles changes to the Title property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualTitle">
            <summary>
            Gets the rendered Title of the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualTitleProperty">
            <summary>
            Identifies the ActualTitle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.PaletteDataPointStyle">
            <summary>
            Gets or sets the DataPoint Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._paletteDataPointStyle">
            <summary>
            Stores the DataPoint Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataPointStyle">
            <summary>
            Gets or sets the DataPoint Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnDataPointStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DataPointStyle dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnDataPointStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Handles changes to the DataPointStyle property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualDataPointStyle">
            <summary>
            Gets the rendered DataPoint Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualDataPointStyleProperty">
            <summary>
            Identifies the ActualDataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.PaletteLegendItemStyle">
            <summary>
            Gets or sets the LegendItem Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._paletteLegendItemStyle">
            <summary>
            Stores the LegendItem Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.LegendItemStyle">
            <summary>
            Gets or sets the LegendItem Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnLegendItemStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the LegendItemStyle dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnLegendItemStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Handles changes to the LegendItemStyle property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualLegendItemStyle">
            <summary>
            Gets the rendered LegendItem Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualLegendItemStyleProperty">
            <summary>
            Identifies the ActualDataPointStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.PaletteDataShapeStyle">
            <summary>
            Gets or sets the DataShape Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._paletteDataShapeStyle">
            <summary>
            Stores the DataShape Style from the SeriesHost's Palette.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataShapeStyle">
            <summary>
            Gets or sets the DataShape Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DataShapeStyleProperty">
            <summary>
            Identifies the DataShapeStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnDataShapeStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DataShapeStyle dependency property.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.OnDataShapeStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Handles changes to the DataShapeStyle property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualDataShapeStyle">
            <summary>
            Gets the rendered DataShape Style for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ActualDataShapeStyleProperty">
            <summary>
            Identifies the ActualDataShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the dependent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._dependentValueBinding">
            <summary>
            The binding used to identify the dependent value binding.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.DependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the dependent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.IndependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the independent value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._independentValueBinding">
            <summary>
            The binding used to identify the independent value binding.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.IndependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the independent value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.Reset">
            <summary>
            Resets the display of the series definition.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.ParentDefinitionSeries">
            <summary>
            Gets the SeriesHost as a DefinitionSeries instance.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.System#Windows#Controls#DataVisualization#Charting#ISeries#LegendItems">
            <summary>
            Gets the collection of legend items for the series definition.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.System#Windows#Controls#DataVisualization#Charting#IRequireSeriesHost#SeriesHost">
            <summary>
            Gets or sets the SeriesHost for the series definition.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition._seriesHost">
            <summary>
            Stores the SeriesHost for the series definition.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.System#Windows#Controls#DataVisualization#Charting#IRequireGlobalSeriesIndex#GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            Handles changes to the global series index of the series definition.
            </summary>
            <param name="globalIndex">New index.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.TransitionDuration">
            <summary>
            Gets or sets the TimeSpan to use for the duration of data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.TransitionEasingFunction">
            <summary>
            Gets or sets the IEasingFunction to use for data transitions.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesDefinition.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode">
            <summary>
            Defines the selection behavior for a series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode.None">
            <summary>
            Selection is disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode.Single">
            <summary>
            The user can select only one item at a time.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SeriesSelectionMode.Multiple">
            <summary>
            The user can select multiple items without holding down a modifier key.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.SplineSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SplineSeries.Points">
            <summary>
            Gets the collection of points that make up the spline.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SplineSeries.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SplineSeries.SplinePoints">
            <summary>
            Gets the collection of points that make up the line.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SplineSeries.SplinePointsProperty">
            <summary>
            Identifies the SplinePoints dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SplineSeries.SplineTension">
            <summary>
            Gets or sets the tension in the beziers that make up the spline.
            </summary>
            <remarks>
            The greater the tension, the more straight/linear the spline will look.
            Less tension creates a more curvy spline.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SplineSeries.SplineTensionProperty">
            <summary>
            Identifies the SplineTension dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SplineSeries.PathStyle">
            <summary>
            Gets or sets the style of the Path object that follows the data 
            points.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.SplineSeries.PathStyleProperty">
            <summary>
            Identifies the PathStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SplineSeries.#cctor">
            <summary>
            Initializes the static members of the LineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SplineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SplineSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SplineSeries.UpdateShapeFromPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Updates the Series shape object from a collection of Points.
            </summary>
            <param name="points">Collection of Points.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Stacked100AreaSeries">
            <summary>
            Control that displays values as a 100% stacked area chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Stacked100AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the Stacked100AreaSeries class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Stacked100BarSeries">
            <summary>
            Control that displays values as a 100% stacked bar chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Stacked100BarSeries.#ctor">
            <summary>
            Initializes a new instance of the Stacked100BarSeries class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Stacked100ColumnSeries">
            <summary>
            Control that displays values as a 100% stacked column chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Stacked100ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the Stacked100ColumnSeries class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Stacked100LineSeries">
            <summary>
            Control that displays values as a 100% stacked line chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Stacked100LineSeries.#ctor">
            <summary>
            Initializes a new instance of the Stacked100LineSeries class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries">
            <summary>
            Control base class for displaying values as a stacked area/line chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.SeriesDefinitionShapes">
            <summary>
            Gets the Shapes corresponding to each SeriesDefinition.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedAreaLineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.OnApplyTemplate">
            <summary>
            Builds the visual tree for the control when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.SeriesDefinitionsCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Collections.IList,System.Int32)">
            <summary>
            Called when the SeriesDefinitions collection changes.
            </summary>
            <param name="action">Type of change.</param>
            <param name="oldItems">Sequence of old items.</param>
            <param name="oldStartingIndex">Starting index of old items.</param>
            <param name="newItems">Sequence of new items.</param>
            <param name="newStartingIndex">Starting index of new items.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.AcquireDependentAxis">
            <summary>
            Acquires a dependent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.AcquireIndependentAxis">
            <summary>
            Acquires an independent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Prepares a DataPoint for use.
            </summary>
            <param name="dataPoint">DataPoint instance.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.DataPointSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event of a DataPoint to update the value margins for the series.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.CreateDataShape">
            <summary>
            Creates a series-appropriate Shape for connecting the points of the series.
            </summary>
            <returns>Shape instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.SynchronizeSeriesDefinitionShapes(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.SeriesDefinition},System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.SeriesDefinition})">
            <summary>
            Synchronizes the SeriesDefinitionShapes dictionary with the contents of the SeriesArea Panel.
            </summary>
            <param name="oldDefinitions">SeriesDefinition being removed.</param>
            <param name="newDefinitions">SeriesDefinition being added.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.IRangeProviderGetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range for the data points of the series.
            </summary>
            <param name="rangeConsumer">Consumer of the range.</param>
            <returns>Range of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.IValueMarginProviderGetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for the data points of the series.
            </summary>
            <param name="valueMarginConsumer">Consumer of the value margins.</param>
            <returns>Sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.UpdateDataItemPlacement(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Updates the placement of the DataItems (data points) of the series.
            </summary>
            <param name="dataItems">DataItems in need of an update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaLineSeries.UpdateShape(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{System.Windows.Point}})">
            <summary>
            Updates the Shape for the series.
            </summary>
            <param name="definitionPoints">Locations of the points of each SeriesDefinition in the series.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries">
            <summary>
            Control that displays values as a stacked area chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedAreaSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.CreateDataShape">
            <summary>
            Creates a series-appropriate Shape for connecting the points of the series.
            </summary>
            <returns>Shape instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.UpdateShape(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{System.Windows.Point}})">
            <summary>
            Updates the Shape for the series.
            </summary>
            <param name="definitionPoints">Locations of the points of each SeriesDefinition in the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.SetPolygonPointsProperty(System.Windows.Shapes.Polygon,System.Windows.Media.PointCollection)">
            <summary>
            Sets the Points property of a Polygon to the specified PointCollection.
            </summary>
            <param name="polygon">Polygon to set the Points property of.</param>
            <param name="pointCollection">Specified PointCollection.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.IValueMarginProviderGetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for the data points of the series.
            </summary>
            <param name="valueMarginConsumer">Consumer of the value margins.</param>
            <returns>Sequence of value margins.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StackedAreaSeries.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the anchored axis for the series.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries">
            <summary>
            Control base class for displaying values as a stacked bar/column chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.DependentAxisOrientation">
            <summary>
            Gets or sets the orientation of the dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.IndependentAxisOrientation">
            <summary>
            Gets or sets the orientation of the independent axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedBarColumnSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.AcquireDependentAxis">
            <summary>
            Acquires a dependent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.AcquireIndependentAxis">
            <summary>
            Acquires an independent axis suitable for use with the data values of the series.
            </summary>
            <returns>Axis instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.IRangeProviderGetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range for the data points of the series.
            </summary>
            <param name="rangeConsumer">Consumer of the range.</param>
            <returns>Range of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.IValueMarginProviderGetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for the data points of the series.
            </summary>
            <param name="valueMarginConsumer">Consumer of the value margins.</param>
            <returns>Sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.UpdateDataItemPlacement(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DefinitionSeries.DataItem})">
            <summary>
            Updates the placement of the DataItems (data points) of the series.
            </summary>
            <param name="dataItems">DataItems in need of an update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.GetMarginForNonCategoryAxis(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Gets the margin to use for an independent axis that does not implement ICategoryAxis.
            </summary>
            <param name="axis">Axis to get the margin for.</param>
            <returns>Margin for axis.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StackedBarColumnSeries.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the anchored axis for the series.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedBarSeries">
            <summary>
            Control that displays values as a stacked bar chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedBarSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedBarSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedColumnSeries">
            <summary>
            Control that displays values as a stacked column chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedColumnSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedColumnSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries">
            <summary>
            Control that displays values as a stacked line chart visualization.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of the StackedLineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries.CreateDataPoint">
            <summary>
            Creates a DataPoint for the series.
            </summary>
            <returns>Series-appropriate DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries.CreateDataShape">
            <summary>
            Creates a series-appropriate Shape for connecting the points of the series.
            </summary>
            <returns>Shape instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries.UpdateShape(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{System.Windows.Point}})">
            <summary>
            Updates the shape for the series.
            </summary>
            <param name="definitionPoints">Locations of the points of each SeriesDefinition in the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StackedLineSeries.SetPolylinePointsProperty(System.Windows.Shapes.Polyline,System.Windows.Media.PointCollection)">
            <summary>
            Sets the Points property of a Polyline to the specified PointCollection.
            </summary>
            <param name="polyline">Polyline to set the Points property of.</param>
            <param name="pointCollection">Specified PointCollection.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap">
            <summary>
            A class used to calculate axis range. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.ValueMargin">
            <summary>
            Gets or sets the value margin object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.Coordinate">
            <summary>
            Gets or sets the coordinate.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.LeftOverlap">
            <summary>
            Gets or sets the left overlap.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.RightOverlap">
            <summary>
            Gets or sets the right overlap.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.#ctor">
            <summary>
            Initializes a new instance of the ValueMarginCoordinateAndOverlap 
            class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs">
            <summary>
            Information describing the ResourceDictionary dispensed when a
            ResourceDictionaryDispensed event is raised.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs.#ctor(System.Int32,System.Windows.ResourceDictionary)">
            <summary>
            Initializes a new instance of the ResourceDictionaryDispensedEventArgs class.
            </summary>
            <param name="index">The index of the ResourceDictionary dispensed.</param>
            <param name="resourceDictionary">The ResourceDictionary dispensed.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs.Index">
            <summary>
            Gets the index of the ResourceDictionary dispensed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs.ResourceDictionary">
            <summary>
            Gets the ResourceDictionary dispensed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether two objects are equal.
            </summary>
            <param name="obj">The other object.</param>
            <returns>
            A value indicating whether the two objects are equal.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ResourceDictionaryDispensedEventArgs.GetHashCode">
            <summary>
            Returns a hash code.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2">
            <summary>
            Implements a left-leaning red-black tree.
            </summary>
            <remarks>
            Based on the research paper "Left-leaning Red-Black Trees"
            by Robert Sedgewick. More information available at:
            http://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf
            http://www.cs.princeton.edu/~rs/talks/LLRB/08Penn.pdf
            </remarks>
            <typeparam name="TKey">Type of keys.</typeparam>
            <typeparam name="TValue">Type of values.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._keyComparison">
            <summary>
            Stores the key comparison function.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._valueComparison">
            <summary>
            Stores the value comparison function.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._rootNode">
            <summary>
            Stores the root node of the tree.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node">
            <summary>
            Represents a node of the tree.
            </summary>
            <remarks>
            Using fields instead of properties drops execution time by about 40%.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Key">
            <summary>
            Gets or sets the node's key.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Value">
            <summary>
            Gets or sets the node's value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Left">
            <summary>
            Gets or sets the left node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Right">
            <summary>
            Gets or sets the right node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.IsBlack">
            <summary>
            Gets or sets the color of the node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Siblings">
            <summary>
            Gets or sets the number of "siblings" (nodes with the same key/value).
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.#ctor(System.Comparison{`0})">
            <summary>
            Initializes a new instance of the LeftLeaningRedBlackTree class implementing a normal dictionary.
            </summary>
            <param name="keyComparison">The key comparison function.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.#ctor(System.Comparison{`0},System.Comparison{`1})">
            <summary>
            Initializes a new instance of the LeftLeaningRedBlackTree class implementing an ordered multi-dictionary.
            </summary>
            <param name="keyComparison">The key comparison function.</param>
            <param name="valueComparison">The value comparison function.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.IsMultiDictionary">
            <summary>
            Gets a value indicating whether the tree is acting as an ordered multi-dictionary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Add(`0,`1)">
            <summary>
            Adds a key/value pair to the tree.
            </summary>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(`0)">
            <summary>
            Removes a key (and its associated value) from a normal (non-multi) dictionary.
            </summary>
            <param name="key">Key to remove.</param>
            <returns>True if key present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(`0,`1)">
            <summary>
            Removes a key/value pair from the tree.
            </summary>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if key/value present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Clear">
            <summary>
            Removes all nodes in the tree.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetKeys">
            <summary>
            Gets a sorted list of keys in the tree.
            </summary>
            <returns>Sorted list of keys.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValueForKey(`0)">
            <summary>
            Gets the value associated with the specified key in a normal (non-multi) dictionary.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Value associated with the specified key.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValuesForKey(`0)">
            <summary>
            Gets a sequence of the values associated with the specified key.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Sequence of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValuesForAllKeys">
            <summary>
            Gets a sequence of all the values in the tree.
            </summary>
            <returns>Sequence of all values.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Count">
            <summary>
            Gets the count of key/value pairs in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MinimumKey">
            <summary>
            Gets the minimum key in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MaximumKey">
            <summary>
            Gets the maximum key in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MinimumValue">
            <summary>
            Gets the minimum key's minimum value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MaximumValue">
            <summary>
            Gets the maximum key's maximum value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.IsRed(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Returns true if the specified node is red.
            </summary>
            <param name="node">Specified node.</param>
            <returns>True if specified node is red.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Add(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,`0,`1)">
            <summary>
            Adds the specified key/value pair below the specified root node.
            </summary>
            <param name="node">Specified node.</param>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,`0,`1)">
            <summary>
            Removes the specified key/value pair from below the specified node.
            </summary>
            <param name="node">Specified node.</param>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if key/value present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.FlipColor(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Flip the colors of the specified node and its direct children.
            </summary>
            <param name="node">Specified node.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.RotateLeft(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Rotate the specified node "left".
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.RotateRight(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Rotate the specified node "right".
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MoveRedLeft(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Moves a red node from the right child to the left child.
            </summary>
            <param name="node">Parent node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MoveRedRight(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Moves a red node from the left child to the right child.
            </summary>
            <param name="node">Parent node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.DeleteMinimum(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Deletes the minimum node under the specified node.
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.FixUp(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Maintains invariants by adjusting the specified nodes children.
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetNodeForKey(`0)">
            <summary>
            Gets the (first) node corresponding to the specified key.
            </summary>
            <param name="key">Key to search for.</param>
            <returns>Corresponding node or null if none found.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetExtreme``1(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node},System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,``0})">
            <summary>
            Gets an extreme (ex: minimum/maximum) value.
            </summary>
            <typeparam name="T">Type of value.</typeparam>
            <param name="node">Node to start from.</param>
            <param name="successor">Successor function.</param>
            <param name="selector">Selector function.</param>
            <returns>Extreme value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Traverse``1(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,``0})">
            <summary>
            Traverses a subset of the sequence of nodes in order and selects the specified nodes.
            </summary>
            <typeparam name="T">Type of elements.</typeparam>
            <param name="node">Starting node.</param>
            <param name="condition">Condition method.</param>
            <param name="selector">Selector method.</param>
            <returns>Sequence of selected nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.KeyAndValueComparison(`0,`1,`0,`1)">
            <summary>
            Compares the specified keys (primary) and values (secondary).
            </summary>
            <param name="leftKey">The left key.</param>
            <param name="leftValue">The left value.</param>
            <param name="rightKey">The right key.</param>
            <param name="rightValue">The right value.</param>
            <returns>CompareTo-style results: -1 if left is less, 0 if equal, and 1 if greater than right.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2">
            <summary>
            Implements a dictionary that can store multiple values for the same key.
            </summary>
            <typeparam name="TKey">Type for keys.</typeparam>
            <typeparam name="TValue">Type for values.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.BinaryTree">
            <summary>
            Gets or sets the BinaryTree instance used to store the dictionary values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
            <param name="allowDuplicateValues">The parameter is not used.</param>
            <param name="keyEqualityComparer">The parameter is not used.</param>
            <param name="valueEqualityComparer">The parameter is not used.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Add(`0,`1)">
            <summary>
            Adds a key/value pair to the dictionary.
            </summary>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Remove(`0,`1)">
            <summary>
            Removes a key/value pair from the dictionary.
            </summary>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if the value was present and removed.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Count">
            <summary>
            Gets the count of values in the dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Item(`0)">
            <summary>
            Returns the collection of values corresponding to a key.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Collection of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Clear">
            <summary>
            Clears the items in the dictionary.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2">
            <summary>
            Implements a dictionary that can store multiple values for the same key and sorts the values.
            </summary>
            <typeparam name="TKey">Type for keys.</typeparam>
            <typeparam name="TValue">Type for values.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.#ctor(System.Boolean,System.Comparison{`0},System.Comparison{`1})">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
            <param name="allowDuplicateValues">The parameter is not used.</param>
            <param name="keyComparison">Key comparison class.</param>
            <param name="valueComparison">Value comparison class.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetKeyRange">
            <summary>
            Gets a Range corresponding to the keys in the dictionary.
            </summary>
            <returns>Range of keys.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetLargestAndSmallestValues">
            <summary>
            Gets the largest and smallest key's extreme values from the dictionary.
            </summary>
            <returns>Tuple of the largest and smallest values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetEnumerator">
            <summary>
            Gets an enumerator for the values in the dictionary.
            </summary>
            <returns>Enumerator for values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the values in the dictionary.
            </summary>
            <returns>Enumerator for the values.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1">
            <summary>
            A generic equality comparer.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.EqualityFunction">
            <summary>
            Gets or sets a function which determines whether two items are equal.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.HashCodeFunction">
            <summary>
            Gets or sets a function that returns a hash code for an object.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Initializes a new instance of the GenericEqualityComparer class.
            </summary>
            <param name="equalityFunction">A function which determines whether 
            two items are equal.</param>
            <param name="hashCodeFunction">A function that returns a hash code 
            for an object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.Equals(`0,`0)">
            <summary>
            A function which determines whether two items are equal.
            </summary>
            <param name="x">The left object.</param>
            <param name="y">The right object.</param>
            <returns>A value indicating whether the objects. are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.GetHashCode(`0)">
            <summary>
            A function that returns a hash code for an object.
            </summary>
            <param name="obj">The object to returns a hash code for.</param>
            <returns>The hash code for the object.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Legend">
            <summary>
            Represents a control that displays a list of items and has a title.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.#cctor">
            <summary>
            Initializes the static members of the Legend class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.#ctor">
            <summary>
            Initializes a new instance of the Legend class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.TitleStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's Title.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.ContentVisibility">
            <summary>
            Gets the Visibility of the Legend's content (title and items).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend.ContentVisibilityProperty">
            <summary>
            Identifies the ContentVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Handles the OnHeaderChanged event for HeaderedItemsControl.
            </summary>
            <param name="oldHeader">Old header.</param>
            <param name="newHeader">New header.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event for HeaderedItemsControl's ItemsSource.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.UpdateContentVisibility">
            <summary>
            Updates the ContentVisibility property to reflect the presence of content.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ObjectPool`1">
            <summary>
            A pool of objects that can be reused.
            </summary>
            <typeparam name="T">The type of object in the pool.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.DefaultMinimumObjectsInThePool">
            <summary>
            The default minimum number objects to keep in the pool.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1._traversing">
            <summary>
            A value indicating whether the pool is being traversed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1._createObject">
            <summary>
            A function which creates objects.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1._objects">
            <summary>
            The list of objects.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.currentIndex">
            <summary>
            The index of the current item in the list.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.minimumObjectsInThePool">
            <summary>
            The minimum number of objects to keep in the pool.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.#ctor(System.Int32,System.Func{`0})">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="minimumObjectsInThePool">The minimum number of objects
            to keep in the pool.</param>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.ForEachRemaining(System.Action{`0})">
            <summary>
            Performs an operation on the subsequent, already-created objects
            in the pool.
            </summary>
            <param name="action">The action to perform on the remaining objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Next">
            <summary>
            Creates a new object or reuses an existing object in the pool.
            </summary>
            <returns>A new or existing object in the pool.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Reset">
            <summary>
            Resets the pool of objects.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Done">
            <summary>
            Finishes the object creation process.
            </summary>
            <remarks>
            If there are substantially more remaining objects in the pool those
            objects may be removed.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Clear">
            <summary>
            Removes the objects from the pool.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper">
            <summary>
            Represents a control that can animate the transitions between its specified
            dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.KeyFramesPerSecond">
            <summary>
            Number of key frames per second to generate the date time animations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.StoryboardKeyPattern">
            <summary>
            The pattern used to ensure unique keys for the storyboards stored in
            a framework element's resource dictionary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.GetStoryboardKey(System.String)">
            <summary>
            Returns a unique key for a storyboard.
            </summary>
            <param name="propertyPath">The property path of the property that 
            the storyboard animates.</param>
            <returns>A unique key for a storyboard.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.BeginAnimation(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.String,System.Object,System.TimeSpan,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Starts animating a dependency property of a framework element to a 
            target value.
            </summary>
            <param name="target">The element to animate.</param>
            <param name="animatingDependencyProperty">The dependency property to
            animate.</param>
            <param name="propertyPath">The path of the dependency property to 
            animate.</param>
            <param name="targetValue">The value to animate the dependency
            property to.</param>
            <param name="timeSpan">The duration of the animation.</param>
            <param name="easingFunction">The easing function to uses to
            transition the data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.CreateStoryboard(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.String,System.Object@,System.TimeSpan,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Creates a story board that animates a dependency property to a 
            value.
            </summary>
            <param name="target">The element that is the target of the 
            storyboard.</param>
            <param name="animatingDependencyProperty">The dependency property
            to animate.</param>
            <param name="propertyPath">The property path of the dependency
            property to animate.</param>
            <param name="toValue">The value to animate the dependency property
            to.</param>
            <param name="durationTimeSpan">The duration of the animation.
            </param>
            <param name="easingFunction">The easing function to use to
            transition the data points.</param>
            <returns>The story board that animates the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.GridExtensions">
            <summary>
            A set of extension methods for the Grid container.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GridExtensions.Mirror(System.Windows.Controls.Grid,System.Windows.Controls.Orientation)">
            <summary>
            Mirrors the grid either horizontally or vertically.
            </summary>
            <param name="grid">The grid to mirror.</param>
            <param name="orientation">The orientation to mirror the grid along.
            </param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.LayoutTransformControl">
            <summary>
            Control that implements support for transformations as if applied by
            LayoutTransform (which does not exist in Silverlight).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.LayoutTransformControl.Child">
            <summary>
            Gets or sets the single child of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to Windows Presentation Foundation's Decorator.Child 
            property.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.ContentProperty">
            <summary>
            Identifies the ContentProperty.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.LayoutTransformControl.Transform">
            <summary>
            Gets or sets the Transform of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to UIElement.RenderTransform.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformProperty">
            <summary>
            Identifies the TransformProperty dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.AcceptableDelta">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.DecimalsAfterRound">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._layoutRoot">
            <summary>
            Host panel for Child element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to layout root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._transformation">
            <summary>
            Transformation matrix corresponding to matrix transform.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._childActualSize">
            <summary>
            Actual DesiredSize of Child element.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformControl class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnApplyTemplate">
            <summary>
            Called whenever the control's template changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ChildChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the child dependency property.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnChildChanged(System.Windows.FrameworkElement)">
            <summary>
            Updates content when the child property is changed.
            </summary>
            <param name="newContent">The new child.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnTransformChanged(System.Windows.Media.Transform)">
            <summary>
            Processes the transform when the transform is changed.
            </summary>
            <param name="newValue">The transform to process.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformUpdated">
            <summary>
            Notifies the LayoutTransformControl that some aspect of its 
            Transform property has changed.
            </summary>
            <remarks>
            Call this to update the LayoutTransform in cases where 
            LayoutTransformControl wouldn't otherwise know to do so.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the current transform to determine the corresponding 
            matrix.
            </summary>
            <param name="transform">The transform to use to determine the 
            matrix.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform and returns the corresponding matrix.
            </summary>
            <param name="transform">The transform to create a matrix for.
            </param>
            <returns>The matrix calculated from the transform.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can
            give to child elements. Infinity can be specified as a value to 
            indicate that the element will size to whatever content is 
            available.</param>
            <returns>The size that this element determines it needs during 
            layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this 
            element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's 
            finalSize for clarity.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Computes the largest usable size after applying the transformation 
            to the specified bounds.
            </summary>
            <param name="arrangeBounds">The size to arrange within.</param>
            <returns>The size required.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Return true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">The left size.</param>
            <param name="b">The right size.</param>
            <returns>A value indicating whether the left size is smaller than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a matrix to avoid issues due to 
            floating point imprecision.
            </summary>
            <param name="matrix">The matrix to round.</param>
            <param name="decimalsAfterRound">The number of decimals after the
            round.</param>
            <returns>The rounded matrix.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implement Windows Presentation Foundation's Rect.Transform on 
            Silverlight.
            </summary>
            <param name="rectangle">The rectangle to transform.</param>
            <param name="matrix">The matrix to use to transform the rectangle.
            </param>
            <returns>The transformed rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.Multiply on 
            Silverlight.
            </summary>
            <param name="matrix1">The left matrix.</param>
            <param name="matrix2">The right matrix.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.HasInverse on
            Silverlight.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>True if matrix has an inverse.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1">
            <summary>
            An object that synchronizes changes in an observable collection to 
            a list.
            </summary>
            <typeparam name="T">The type of the objects in the collection.
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1._collection">
            <summary>
            The collection to synchronize with a list.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.Collection">
            <summary>
            Gets or sets the collection to synchronize with a list.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.TargetList">
            <summary>
            Gets or sets the panel to synchronize with the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that synchronizes the panel's child collection with the 
            contents of the observable collection when it changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.Populate">
            <summary>
            A method that populates a panel with the items in the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.ClearItems">
            <summary>
            Removes the items in the adapted list from the target list.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.OrientedPanel">
            <summary>
            A panel that plots elements on a one dimensional plane.  In order to 
            minimize collisions it moves elements further and further from the edge 
            of the plane based on their priority.  Elements that have the same
            priority level are always the same distance from the edge.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.ActualMinimumDistanceBetweenChildren">
            <summary>
            Gets the actual minimum distance between children.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.ActualMinimumDistanceBetweenChildrenProperty">
            <summary>
            Identifies the ActualMinimumDistanceBetweenChildren dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.MinimumDistanceBetweenChildren">
            <summary>
            Gets or sets the minimum distance between children.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.MinimumDistanceBetweenChildrenProperty">
            <summary>
            Identifies the MinimumDistanceBetweenChildren dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnMinimumDistanceBetweenChildrenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumDistanceBetweenChildrenProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its MinimumDistanceBetweenChildren.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnMinimumDistanceBetweenChildrenPropertyChanged(System.Double,System.Double)">
            <summary>
            MinimumDistanceBetweenChildrenProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.ActualLength">
            <summary>
            Gets the actual length of the panel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.ActualLengthProperty">
            <summary>
            Identifies the ActualLength dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetCenterCoordinate(System.Windows.UIElement)">
            <summary>
            Gets the value of the CenterCoordinate attached property for a specified UIElement.
            </summary>
            <param name="element">The UIElement from which the property value is read.</param>
            <returns>The CenterCoordinate property value for the UIElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.SetCenterCoordinate(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the CenterCoordinate attached property to a specified UIElement.
            </summary>
            <param name="element">The UIElement to which the attached property is written.</param>
            <param name="value">The needed CenterCoordinate value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.CenterCoordinateProperty">
            <summary>
            Identifies the CenterCoordinate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnCenterCoordinatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CenterCoordinateProperty property changed handler.
            </summary>
            <param name="dependencyObject">UIElement that changed its CenterCoordinate.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.OffsetPadding">
            <summary>
            Gets or sets the amount of offset padding to add between items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.OffsetPaddingProperty">
            <summary>
            Identifies the OffsetPadding dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOffsetPaddingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OffsetPaddingProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its OffsetPadding.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOffsetPaddingPropertyChanged(System.Double,System.Double)">
            <summary>
            OffsetPaddingProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetPriority(System.Windows.UIElement)">
            <summary>
            Gets the value of the Priority attached property for a specified UIElement.
            </summary>
            <param name="element">The UIElement from which the property value is read.</param>
            <returns>The Priority property value for the UIElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.SetPriority(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Priority attached property to a specified UIElement.
            </summary>
            <param name="element">The UIElement to which the attached property is written.</param>
            <param name="value">The needed Priority value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.PriorityProperty">
            <summary>
            Identifies the Priority dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnPriorityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PriorityProperty property changed handler.
            </summary>
            <param name="dependencyObject">UIElement that changed its Priority.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.IsInverted">
            <summary>
            Gets or sets a value indicating whether the panel is inverted.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.IsInvertedProperty">
            <summary>
            Identifies the IsInverted dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsInvertedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsInvertedProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its IsInverted.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsInvertedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsInvertedProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.IsReversed">
            <summary>
            Gets or sets a value indicating whether the direction is reversed. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.IsReversedProperty">
            <summary>
            Identifies the IsReversed dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsReversedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its IsReversed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsReversedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.Orientation">
            <summary>
            Gets or sets the orientation of the panel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOrientationPropertyChanged(System.Windows.Controls.Orientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.PriorityOffsets">
            <summary>
            Gets or sets the offset of the edge to use for each priority group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.#ctor">
            <summary>
            Instantiates a new instance of the OrientedPanel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.UpdateActualLength">
            <summary>
            Updates the actual length property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetRanges(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Func{System.Windows.UIElement,System.Double})">
            <summary>
            Returns a sequence of ranges for a given sequence of children and a
            length selector.
            </summary>
            <param name="children">A sequence of children.</param>
            <param name="lengthSelector">A function that returns a length given
            a UIElement.</param>
            <returns>A sequence of ranges.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures children and determines necessary size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The necessary size.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges items according to position and priority.
            </summary>
            <param name="finalSize">The final size of the panel.</param>
            <returns>The final size of the control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetCorrectedDesiredSize(System.Windows.UIElement)">
            <summary>
            Gets the "corrected" DesiredSize (for Line instances); one that is
            more consistent with how the elements actually render.
            </summary>
            <param name="element">UIElement to get the size for.</param>
            <returns>Corrected size.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1">
            <summary>
            An observable collection that can only be written to by internal 
            classes.
            </summary>
            <typeparam name="T">The type of object in the observable collection.
            </typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.IsMutating">
            <summary>
            Gets or sets a value indicating whether the owner is writing to the 
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.Mutate(System.Action{System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection{`0}})">
            <summary>
            A method that mutates the collection.
            </summary>
            <param name="action">The action to mutate the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes an item from the collection at an index.
            </summary>
            <param name="index">The index to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets an item at a particular location in the collection.
            </summary>
            <param name="index">The location to set an item.</param>
            <param name="item">The item to set.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item in the collection.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.ClearItems">
            <summary>
            Clears the items from the collection.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StoryboardQueue">
            <summary>
            Represents a storyboard queue that plays storyboards in sequence.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.StoryboardQueue._storyBoards">
            <summary>
            A queue of the storyboards.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StoryboardQueue.Enqueue(System.Windows.Media.Animation.Storyboard,System.EventHandler)">
            <summary>
            Accepts a new storyboard to play in sequence.
            </summary>
            <param name="storyBoard">The storyboard to play.</param>
            <param name="completedAction">An action to execute when the 
            storyboard completes.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StoryboardQueue.Dequeue">
            <summary>
            Removes the next storyboard in the queue and plays it.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1">
            <summary>
            An observable collection that cannot be reset.  When clear is called
            items are removed individually, giving listeners the chance to detect
            each remove event and perform operations such as unhooking event 
            handlers.
            </summary>
            <typeparam name="T">The type of item in the collection.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1.#ctor">
            <summary>
            Instantiates a new instance of the NoResetObservableCollection 
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1.ClearItems">
            <summary>
            Clears all items in the collection by removing them individually.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StringFormatConverter">
            <summary>
            Converts a value to a string using a format string.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value to a string by formatting it.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">The format string.</param>
            <param name="culture">The culture to use for conversion.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a string to a target type.
            </summary>
            <param name="value">The value to convert to a string.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">A parameter used during the conversion
            process.</param>
            <param name="culture">The culture to use for the conversion.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Title">
            <summary>
            Represents the title of a data visualization control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Title.#cctor">
            <summary>
            Initializes the static members of the Title class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Title.#ctor">
            <summary>
            Initializes a new instance of the Title class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.HSLSolidColorBrushInterpolator">
            <summary>
            Interpolator which converts a numeric value from its [ActualDataMinimum, ActualDataMaximum]
            range to a color in the range [From, To].
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.HSLSolidColorBrushInterpolator.Interpolate(System.Double)">
            <summary>
            Interpolates the given value between its [ActualDataMinimum, ActualDataMaximum] range
            and returns a color in the range [From, To].
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated color in the range [From, To].</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Tuple`2">
            <summary>
            Represents a 2-tuple, or pair.
            </summary>
            <typeparam name="T1">The type of the tuple's first component.</typeparam>
            <typeparam name="T2">The type of the tuple's second component.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Tuple`2.Item1">
            <summary>
            Gets the value of the current Tuple(T1, T2) object's first component.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Tuple`2.Item2">
            <summary>
            Gets the value of the current Tuple(T1, T2) object's second component.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple(T1, T2) class.
            </summary>
            <param name="item1">The value of the tuple's first component.</param>
            <param name="item2">The value of the tuple's second component.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1">
            <summary>
            An observable collection that does not allow duplicates.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item at an index. Throws if the item already exists in the collection.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets an item at a given index. Throws if the item already exists at another index.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.ClearItems">
            <summary>
            Clears all items in the collection by removing them individually.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Unit">
            <summary>
            Units of measure.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Unit.Pixels">
            <summary>
            The corresponding value is in pixels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Unit.Degrees">
            <summary>
            The corresponding value is in degrees.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.UnitValue">
            <summary>
            A value in units.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.NaN">
            <summary>
            Returns a UnitValue representing an invalid value.
            </summary>
            <returns>UnitValue instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.#ctor(System.Double,System.Windows.Controls.DataVisualization.Unit)">
            <summary>
            Instantiates a new instance of the UnitValue struct.
            </summary>
            <param name="value">The value associated with the units.</param>
            <param name="unit">The units associated with the value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.UnitValue.Value">
            <summary>
            Gets the value associated with the units.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.UnitValue.Unit">
            <summary>
            Gets the units associated with the value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.CompareTo(System.Object)">
            <summary>
            Compares two unit values to determine if they are equal or not.
            </summary>
            <param name="obj">The object being compared.</param>
            <returns>A number smaller than zero if the obj is larger than this
            object.  A number equal to 0 if they are equal.  A number greater 
            than zero if this unit value is greater than obj.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.Equals(System.Object)">
            <summary>
            Determines if two values are equal.
            </summary>
            <param name="obj">The other value.</param>
            <returns>A value indicating whether values are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_Equality(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether two unit value objects are equal.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating  whether two unit value objects are 
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_Inequality(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether two unit value objects are not equal.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether two unit value objects are not
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_LessThan(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether the left value is smaller than the right.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether the left value is smaller than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_GreaterThan(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether the left value is larger than the right.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether the left value is larger than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.GetHashCode">
            <summary>
            Returns the hash code of the unit value object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ValueHelper">
            <summary>
            A set of functions for data conversion operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ValueHelper.Radian">
            <summary>
            The value of a single radian.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.CanGraph(System.Double)">
            <summary>
            Returns a value indicating whether this value can be graphed on a 
            linear axis.
            </summary>
            <param name="value">The value to evaluate.</param>
            <returns>A value indicating whether this value can be graphed on a 
            linear axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TryConvert(System.Object,System.Double@)">
            <summary>
            Attempts to convert an object into a double.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="doubleValue">The double value.</param>
            <returns>A value indicating whether the value can be converted to a 
            double.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TryConvert(System.Object,System.DateTime@)">
            <summary>
            Attempts to convert an object into a date time.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="dateTimeValue">The double value.</param>
            <returns>A value indicating whether the value can be converted to a 
            date time.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDouble(System.Object)">
            <summary>
            Converts an object into a double.
            </summary>
            <param name="value">The value to convert to a double.</param>
            <returns>The converted double value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDateTime(System.Object)">
            <summary>
            Converts a value to a date.
            </summary>
            <param name="value">The value to convert to a date.</param>
            <returns>The converted date value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetDateTimesBetweenInclusive(System.DateTime,System.DateTime,System.Int64)">
            <summary>
            Returns a sequence of date time values from a start and end date 
            time inclusive.
            </summary>
            <param name="start">The start date time.</param>
            <param name="end">The end date time.</param>
            <param name="count">The number of values to return.</param>
            <returns>A sequence of date time values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetTimeSpanIntervalsInclusive(System.TimeSpan,System.Int64)">
            <summary>
            Returns a sequence of time span values within a time span inclusive.
            </summary>
            <param name="timeSpan">The time span to split.</param>
            <param name="count">The number of time spans to return.</param>
            <returns>A sequence of time spans.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetIntervalsInclusive(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns that intervals between a start and end value, including those
            start and end values.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
            <param name="count">The total number of intervals.</param>
            <returns>A sequence of intervals.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.RemoveNoiseFromDoubleMath(System.Double)">
            <summary>
            Removes the noise from double math.
            </summary>
            <param name="value">The value.</param>
            <returns>A double without a noise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDoubleRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Converts a range into a double range.
            </summary>
            <param name="range">The range to convert.</param>
            <returns>A range with its members converted to doubles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDateTimeRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Converts a range into a date time range.
            </summary>
            <param name="range">The range to convert.</param>
            <returns>A range with its members converted to date times.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.Compare(System.IComparable,System.IComparable)">
            <summary>
            Compares two IComparables returning -1 if the left is null and 1 if
            the right is null.
            </summary>
            <param name="left">The left comparable.</param>
            <param name="right">The right comparable.</param>
            <returns>A value indicating which is larger.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.Translate(System.Windows.Point,System.Windows.Point)">
            <summary>
            Applies the translate transform to a point.
            </summary>
            <param name="origin">The origin point.</param>
            <param name="offset">The offset point.</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToComparableRange(System.Windows.Controls.DataVisualization.Range{System.Double})">
            <summary>
            Converts any range to a range of IComparable.
            </summary>
            <param name="range">The range to be converted.</param>
            <returns>The new range type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.LeftOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the left value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The left value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.RightOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the right value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The right value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.WidthOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the width value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The width value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.HeightOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the height value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The height value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.BottomOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the bottom value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The bottom value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TopOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the top value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The top value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToComparableRange(System.Windows.Controls.DataVisualization.Range{System.DateTime})">
            <summary>
            Converts any range to a range of IComparable.
            </summary>
            <param name="range">The range to be converted.</param>
            <returns>The new range type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetLength(System.Windows.Controls.DataVisualization.Range{System.DateTime})">
            <summary>
            Returns the time span of a date range.
            </summary>
            <param name="range">The range of values.</param>
            <returns>The length of the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetLength(System.Windows.Controls.DataVisualization.Range{System.Double})">
            <summary>
            Returns the time span of a date range.
            </summary>
            <param name="range">The range of values.</param>
            <returns>The length of the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.IsEmptyOrHasNoSize(System.Windows.Rect)">
            <summary>
            Returns a value indicating whether a rectangle is empty or has
            no width or height.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>A value indicating whether a rectangle is empty or has
            no width or height.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.SetStyle(System.Windows.FrameworkElement,System.Windows.Style)">
            <summary>
            Sets the style property of an element.
            </summary>
            <param name="element">The element.</param>
            <param name="style">The style.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Range`1">
            <summary>
            A range of values.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._hasData">
            <summary>
            A flag that determines whether the range is empty or not.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.HasData">
            <summary>
            Gets a value indicating whether the range is empty or not.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._maximum">
            <summary>
            The maximum value in the range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.Maximum">
            <summary>
            Gets the maximum value in the range.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._minimum">
            <summary>
            The minimum value in the range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.Minimum">
            <summary>
            Gets the minimum value in the range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the Range class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.op_Equality(System.Windows.Controls.DataVisualization.Range{`0},System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compare two ranges and return a value indicating whether they are
            equal.
            </summary>
            <param name="leftRange">Left-hand side range.</param>
            <param name="rightRange">Right-hand side range.</param>
            <returns>A value indicating whether the ranges are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.op_Inequality(System.Windows.Controls.DataVisualization.Range{`0},System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compare two ranges and return a value indicating whether they are
            not equal.
            </summary>
            <param name="leftRange">Left-hand side range.</param>
            <param name="rightRange">Right-hand side range.</param>
            <returns>A value indicating whether the ranges are not equal.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Add(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Adds a range to the current range.
            </summary>
            <param name="range">A range to add to the current range.</param>
            <returns>A new range that encompasses the instance range and the
            range parameter.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Equals(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compares the range to another range.
            </summary>
            <param name="range">A different range.</param>
            <returns>A value indicating whether the ranges are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Equals(System.Object)">
            <summary>
            Compares the range to an object.
            </summary>
            <param name="obj">Another object.</param>
            <returns>A value indicating whether the other object is a range,
            and if so, whether that range is equal to the instance range.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Contains(`0)">
            <summary>
            Returns a value indicating whether a value is within a range.
            </summary>
            <param name="value">The value.</param>
            <returns>Whether the value is within the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.IntersectsWith(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Returns a value indicating whether two ranges intersect.
            </summary>
            <param name="range">The range to compare against this range.</param>
            <returns>A value indicating whether the ranges intersect.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.GetHashCode">
            <summary>
            Computes a hash code value.
            </summary>
            <returns>A hash code value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.ToString">
            <summary>
            Returns the string representation of the range.
            </summary>
            <returns>The string representation of the range.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.IResourceDictionaryDispenser">
            <summary>
            Represents a service that dispenses ResourceDictionaries.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.IResourceDictionaryDispenser.GetResourceDictionariesWhere(System.Func{System.Windows.ResourceDictionary,System.Boolean})">
            <summary>
            Returns a rotating enumerator of ResourceDictionaries coordinated with
            the style dispenser object to ensure that no two enumerators are
            currently on the same one if possible.  If the dispenser is reset or
            its collection is changed then the enumerators will also be reset.
            </summary>
            <param name="predicate">A predicate that returns a value
            indicating whether to return a ResourceDictionary.</param>
            <returns>An enumerator of ResourceDictionaries.</returns>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.IResourceDictionaryDispenser.ResourceDictionariesChanged">
            <summary>
            Event that is invoked when the StyleDispenser's ResourceDictionaries have changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.EnumerableFunctions">
            <summary>
            This class contains general purpose functions to manipulate the generic
            IEnumerable type.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.FastCount(System.Collections.IEnumerable)">
            <summary>
            Attempts to cast IEnumerable to a list in order to retrieve a count 
            in order one.  It attempts to cast fail the sequence is enumerated.
            </summary>
            <param name="that">The sequence.</param>
            <returns>The number of elements in the sequence.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MinOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the minimum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.SumOrDefault(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Returns the sum of all values in the sequence or the default value.
            </summary>
            <param name="that">The stream.</param>
            <returns>The sum of all values or the default value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MaxOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the maximum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Accepts two sequences and applies a function to the corresponding 
            values in the two sequences.
            </summary>
            <typeparam name="T0">The type of the first sequence.</typeparam>
            <typeparam name="T1">The type of the second sequence.</typeparam>
            <typeparam name="R">The return type of the function.</typeparam>
            <param name="enumerable0">The first sequence.</param>
            <param name="enumerable1">The second sequence.</param>
            <param name="func">The function to apply to the corresponding values
            from the two sequences.</param>
            <returns>A sequence of transformed values from both sequences.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.Iterate``1(``0,System.Func{``0,``0})">
            <summary>
            Creates a sequence of values by accepting an initial value, an 
            iteration function, and apply the iteration function recursively.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="value">The initial value.</param>
            <param name="nextFunction">The function to apply to the value.
            </param>
            <returns>A sequence of the iterated values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.IndexOf(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns the index of an item in a sequence.
            </summary>
            <param name="that">The sequence.</param>
            <param name="value">The item to search for.</param>
            <returns>The index of the item or -1 if not found.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.ForEachWithIndex``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Executes an action for each item and a sequence, passing in the 
            index of that item to the action procedure.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <param name="action">A function that accepts a sequence item and its
            index in the sequence.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MaxOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the maximum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the maximum value from.
            </param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MinOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the minimum value from.
            </param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.FastElementAt``1(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Attempts to retrieve an element at an index by testing whether a 
            sequence is randomly accessible.  If not, performance degrades to a 
            linear search.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <param name="index">The index of the element in the sequence.</param>
            <returns>The element at the given index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.Scan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over a sequence and returns each intermediate result.
            </summary>
            <typeparam name="T">Type of elements in source sequence.</typeparam>
            <typeparam name="S">Type of elements in result sequence.</typeparam>
            <param name="that">Sequence to scan.</param>
            <param name="seed">Initial accumulator value.</param>
            <param name="accumulator">Function used to generate the result sequence.</param>
            <returns>Sequence of intermediate results.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.CastWrapper``1(System.Collections.IEnumerable)">
            <summary>
            Converts the elements of an System.Collections.IEnumerable to the specified type.
            </summary>
            <remarks>
            A wrapper for the Enumerable.Cast(T) method that works around a limitation on some platforms.
            </remarks>
            <typeparam name="TResult">The type to convert the elements of source to.</typeparam>
            <param name="source">The System.Collections.IEnumerable that contains the elements to be converted.</param>
            <returns>
            An System.Collections.Generic.IEnumerable(T) that contains each element of the source sequence converted to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions">
            <summary>
            Collection of functions that manipulate streams of ranges.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions.GetRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum and maximum values in a stream.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="that">The stream.</param>
            <returns>The range of values in the stream.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions.Sum``1(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Range{``0}})">
            <summary>
            Returns a range encompassing all ranges in a stream.
            </summary>
            <typeparam name="T">The type of the minimum and maximum values.
            </typeparam>
            <param name="that">The stream.</param>
            <returns>A range encompassing all ranges in a stream.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ResourceDictionaryCollection">
            <summary>
            Represents a collection of ResourceDictionary objects.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ResourceDictionaryCollection.#ctor">
            <summary>
            Initializes a new instance of the ResourceDictionaryCollection class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.BindingExtractor">
            <summary>
            Helper class which can extract the value from a source object using a binding path. It 
            creates a Binding object based on the path, and calls SetBinding to a temporary 
            FrameworkElement (base class) to extract the value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.BindingExtractor.Value">
            <summary>
            Gets or sets a generic Value which will be the target of the binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.BindingExtractor.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.BindingExtractor.RetrieveProperty(System.Object,System.Windows.Data.Binding)">
            <summary>
            Returns the value of the given Binding when applied on the given object instance.
            It does that by making a copy of the binding, setting its source to be the object
            instance and the target to be the member Value property.
            </summary>
            <param name="instance">Object instance containing the property.</param>
            <param name="valueBinding">Binding to the property to be retrieved.</param>
            <returns>The value of the binding.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMap">
            <summary>
            Represents a control which can display hierarchical data as a set of nested rectangles. 
            Each item in the hierarchy is laid out in a rectangular area of a size proportional to 
            the value associated with the item.
            </summary>
            <remarks>
            You populate a TreeMap by setting its ItemsSource property to the root of the hierarchy 
            you would like to display. The ItemDefinition property must be set to an instance of a 
            TreeMapItemDefinition with appropriate bindings for Value (identifying the value to be used
            when calculating relative item sizes) and ItemsSource (identifying the collection of 
            children for each item).
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ContainerName">
            <summary>
            The name of the Container template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorValueProperty">
            <summary>
            Identifies the InterpolatorValue dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorValue">
            <summary>
            Gets or sets a generic value used as a temporary storage used as a source for TargetName/TargetProperty binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._helper">
            <summary>
            Holds a helper object used to extract values using a property path.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._nodeRoots">
            <summary>
            The roots of the pre-calculated parallel tree of TreeMapNodes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._getTreeMapNodesCache">
            <summary>
            Cached sequence of all TreeMapNodes used by GetTreeMapNodes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionSelector">
            <summary>
            Gets or sets the selector used to choose the item template dynamically.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionSelectorProperty">
            <summary>
            Identifies the ItemDefinitionSelector dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionSelectorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the TreeMapItemDefinitionSelectorProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionSelectorPropertyChanged(System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector,System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector)">
            <summary>
            Called when the value of the ItemDefinitionSelectorProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old selector.</param>
            <param name="newValue">The new selector.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinition">
            <summary>
            Gets or sets a value representing the template used to display each item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionProperty">
            <summary>
            Identifies the ItemDefinition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ItemDefinitionProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            This callback ensures that any change in TreeMapItemDefinition.
            </summary>
            <param name="sender">Source TreeMapItemDefinition object.</param>
            <param name="e">Event handler arguments (parameter name).</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Windows.Controls.DataVisualization.TreeMapItemDefinition,System.Windows.Controls.DataVisualization.TreeMapItemDefinition)">
            <summary>
            Called when the value of the ItemDefinitionProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old item definition.</param>
            <param name="newValue">The new item definition.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemsSource">
            <summary>
            Gets or sets a value representing the list of hierarchies used to generate
            content for the TreeMap.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ItemsSourceProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemsSourcePropertyChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the value of the ItemsSourceProperty property changes.
            </summary>
            <param name="oldValue">The old ItemsSource collection.</param>
            <param name="newValue">The new ItemsSource collection.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._weakEventListener">
            <summary>
            WeakEventListener used to handle INotifyCollectionChanged events.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.Interpolators">
            <summary>
            Gets or sets a value representing a collection of interpolators to use in TreeMap.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorsProperty">
            <summary>
            Identifies the Interpolators dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the InterpolatorsProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsPropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.Controls.DataVisualization.Interpolator},System.Collections.ObjectModel.Collection{System.Windows.Controls.DataVisualization.Interpolator})">
            <summary>
            Called when the value of the InterpolatorsProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old Interpolators collection.</param>
            <param name="newValue">The new Interpolators collection.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._containerElement">
            <summary>
            The Container template part is used to hold all the items inside
            a TreeMap.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ContainerElement">
            <summary>
            Gets the Container template part that is used to hold all the items inside
            a TreeMap.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.#ctor">
            <summary>
            Initializes a new instance of the TreeMap class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes call ApplyTemplate. Gets references
            to the template parts required by this control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.GetContainerForItemOverride(System.Object,System.Int32)">
            <summary>
            Constructs a new instance of an element used to display an item in the tree. 
            </summary>
            <remarks>
            By default TreeMap will use the template set in its ItemDefinition property, or the value 
            returned from GetTemplateForItemOverride if overridden. Override this method to build a 
            custom element.
            </remarks>
            <param name="data">One of the items in the ItemsSource hierarchy.</param>
            <param name="level">The level of the item in the hierarchy.</param>
            <returns>A new FrameworkElement which will be added to the TreeMap control. If this
            method returns null the TreeMap will create the item using the ItemDefinition property,
            or the value returned by TreeMapItemDefinitionSelector if specified.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ArrangeOverride(System.Windows.Size)">
            <summary>
            Performs the Arrange pass of the layout.
            </summary>
            <remarks>
            We round rectangles to snap to nearest pixels. We do that to avoid 
            anti-aliasing which results in better appearance. Moreover to get
            correct layout we would need to use UseLayoutRounding=false which
            is Silverlight specific. A side effect is that areas for rectangles 
            in the visual tree no longer can be used to compare them as dimensions
            are not rounded and therefore not precise. 
            </remarks>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Triggers a recalculation of the layout when items are added/removed from the Interpolators collection.
            </summary>
            <param name="sender">Reference to the Interpolators collection.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.GetTreeMapNodes">
            <summary>
            Returns a sequence of TreeMapNodes in breadth-first order.
            </summary>
            <returns>Sequence of TreeMapNodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ComputeRectangles(System.Windows.Controls.DataVisualization.TreeMapNode,System.Windows.Rect)">
            <summary>
            Recursively computes TreeMap rectangles given the root node and the bounding rectangle as start.
            </summary>
            <param name="root">Root of the TreeMapNode tree.</param>
            <param name="boundingRectangle">Bounding rectangle which will be sub-divided.</param>
            <returns>A list of RectangularAreas containing a rectangle for each node in the tree.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.BuildTreeMapTree(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Builds the parallel trees of TreeMapNodes with references to the original user's trees.
            </summary>
            <param name="nodes">The list of roots of the user hierarchies (whatever was passed through ItemsSource).</param>
            <param name="level">Level being processed at this recursive call (the root node is at level 0).</param>
            <returns>The list of roots of the internal trees of TreeMapNodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.CreateChildren">
            <summary>
            Extracts all children from the user's trees (ItemsSource) into a flat list, and 
            creates UI elements for them.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.RebuildTree">
            <summary>
            Called internally whenever a property of TreeMap is changed and the internal 
            structures need to be rebuilt in order to recalculate the layout.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapItemDefinition">
            <summary>
            Represents a class that defines various aspects of TreeMap items.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._itemTemplate">
            <summary>
            A value representing the DataTemplate to instantiate in 
            order to create a representation of each TreeMap item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ItemTemplate">
            <summary>
            Gets or sets a value representing the DataTemplate to instantiate in 
            order to create a representation of each TreeMap item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._valueBinding">
            <summary>
            A value representing a binding which can be used 
            to retrieve the value associated with each item, needed to calculate 
            relative areas of TreeMap items.        
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ValueBinding">
            <summary>
            Gets or sets a value representing a binding which can be used 
            to retrieve the value associated with each item, needed to calculate 
            relative areas of TreeMap items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ValuePath">
            <summary>
            Gets or sets the Value Path used to set ValueBinding for retrieving 
            the value associated with each item, needed to calculate relative 
            areas of TreeMap items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._itemsSource">
            <summary>
            The binding that indicates where to find the collection
            that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ItemsSource">
            <summary>
            Gets or sets the binding that indicates where to find the collection
            that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._childItemPadding">
            <summary>
            A property representing the amount of space to leave 
            between a parent item and its children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ChildItemPadding">
            <summary>
            Gets or sets a property representing the amount of space to leave 
            between a parent item and its children.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.#ctor">
            <summary>
            Initializes a new instance of the TreeMapItemDefinition class.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.PropertyChanged">
            <summary>
            PropertyChanged event required by INotifyPropertyChanged.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.NotifyPropertyChanged(System.String)">
            <summary>
            Updates the TreeMap if one of properties changes.
            </summary>
            <param name="parameterName">The parameter name.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector">
            <summary>
            Provides a way to choose a TreeMapItemDefinition based on the data item and 
            the level of the item in the tree.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector.#ctor">
            <summary>
            Initializes a new instance of the TreeMapItemDefinitionSelector class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector.SelectItemDefinition(System.Windows.Controls.DataVisualization.TreeMap,System.Object,System.Int32)">
            <summary>
            Returns an instance of a TreeMapItemDefinition class used to specify properties for the
            current item.
            </summary>
            <param name="treeMap">Reference to the TreeMap class.</param>
            <param name="item">One of the nodes in the ItemsSource hierarchy.</param>
            <param name="level">The level of the node in the hierarchy.</param>
            <returns>The TreeMapItemDefinition to be used for this node. If this method returns null
            the TreeMap will use the value of its ItemDefinition property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.DoubleInterpolator">
            <summary>
            Interpolator which converts a numeric value from its [RangeMinimum, RangeMaximum]
            range to another value in the range [From, To].
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DoubleInterpolator.Interpolate(System.Double)">
            <summary>
            Interpolates the given value between its [RangeMinimum, RangeMaximum] range
            and returns an interpolated value in the range [From, To].
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated value in the range [From, To].</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.InterpolationMode">
            <summary>
            Specifies the supported interpolation modes.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.InterpolationMode.LeafNodesOnly">
            <summary>
            Interpolation shall be applied to leaf nodes only in the tree.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.InterpolationMode.AllNodes">
            <summary>
            Interpolation shall be applied to all nodes in the tree.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Interpolator">
            <summary>
            Abstract base class for Interpolator converters.
            </summary>
            <remarks>
            <para>
            An Interpolator is used to project a value from a source range 
            [ActualDataMinimum, ActualDataMaximum] to a target range [From, To]. 
            The source range can be specified directly by setting the DataMinimum 
            and/or DataMaximum properties, or indirectly by setting DataRangeBinding.
            When the DataRangeBinding property is set,the TreeMap will evaluate the 
            binding for the entire tree, calculating the minimum and maximum values 
            automatically. The custom target range and the actual interpolation 
            logic is defined by sub-classes of this abstract class.
            </para>
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._helper">
            <summary>
            Holds a helper object used to extract values using a property path.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.InterpolationMode">
            <summary>
            Gets or sets a value telling to which tree nodes the interpolation 
            should be applied to. LeafNodesOnly by default.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.TargetName">
            <summary>
            Gets or sets a value representing the x:Name of the element to which
            the interpolated value will be applied.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.TargetProperty">
            <summary>
            Gets or sets a value representing the path to a property which will 
            receive the interpolated value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataMinimum">
            <summary>
            Gets or sets a value representing the fixed minimum value across the 
            entire set. If the value is not set directly or is NaN, the 
            ActualDataMaximum will be calculated automatically from the data set 
            by using the DataRangeBinding property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator.DataMinimumProperty">
            <summary>
            Identifies the DataMinimum dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataMaximum">
            <summary>
            Gets or sets a value representing the fixed maximum value across the 
            entire set. If the value is not set directly or is NaN, the 
            ActualDataMinimum will be calculated automatically from the data set 
            by using the DataRangeBinding property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator.DataMaximumProperty">
            <summary>
            Identifies the DataMaximum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._actualDataMaximum">
            <summary>
            This fields contains the automatically calculated maximal value in 
            the dataset.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.ActualDataMaximum">
            <summary>
            Gets the value representing the maximal value in the data set. It is
            automatically from the data set by using the DataRangeBinding 
            property if DataMaximum is not set. If it is set, DataMaximum is 
            returned.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._actualDataMinimum">
            <summary>
            This fields contains the automatically calculated minimal value in 
            the dataset.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.ActualDataMinimum">
            <summary>
            Gets the value representing the minimal value in the data set. It is
            automatically from the data set by using the DataRangeBinding 
            property if DataMinimum is not set. If it is set, DataMinimum is 
            returned.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataRangeBinding">
            <summary>
            Gets or sets a binding to a property which will be examined to retrieve the minimum and maximum range 
            values across the entire data set. If this value is null then the DataMinimum and DataMaximum values
            need be set manually.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.#ctor">
            <summary>
            Initializes a new instance of the Interpolator class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.IncludeInRange(System.Object)">
            <summary>
            If the DataRangeBinding property is set then this method updates the minimum/maximum range
            of this object by including the value passed in.
            </summary>
            <param name="data">Object to extract the value from (the Source of the DataRangeBinding).</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.Interpolate(System.Double)">
            <summary>
            Called to interpolate the value of the given object between the DataMinimum and DataMaximum
            extremes, and to project it in a specific [From, To] range defined. The target range (and
            therefore the implementation of this method) is defined in a specific sub-class.
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated value.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.RangeInterpolator`1">
            <summary>
            Abstract class representing an interpolator which projects values to
            a continuous range defined by the From and To properties.
            </summary>
            <typeparam name="T">The data type of the values in the target range.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.RangeInterpolator`1.From">
            <summary>
            Gets or sets a value representing the start value of the target range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.RangeInterpolator`1.To">
            <summary>
            Gets or sets a value representing the end value of the target range.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.SolidColorBrushInterpolator">
            <summary>
            Interpolator which converts a numeric value from its [RangeMinimum, RangeMaximum]
            range to a color in the range [From, To].
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SolidColorBrushInterpolator.Interpolate(System.Double)">
            <summary>
            Interpolates the given value between its [RangeMinimum, RangeMaximum] range
            and returns a color in the range [From, To].
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated color in the range [From, To].</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.SquaringAlgorithm">
            <summary>
            Class encapsulating the logic of sub-dividing a parent rectangular area into child rectangles.
            It implements the squaring tree map algorithm where all child nodes are allocated
            areas proportional to their values, but the aspect ratio of each rectangle is kept 
            as close as possible to a square.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._areas">
            <summary>
            Holds the list of nodes being considered by the algorithm.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._currentRectangle">
            <summary>
            The current rectangle being divided.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._currentStart">
            <summary>
            Internal index in the list of nodes being divided.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._factor">
            <summary>
            Temporary variable used during the algorithm. Represents the ratio between 
            the real area of the rectangle and the virtual value associated with the node.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.Split(System.Windows.Rect,System.Windows.Controls.DataVisualization.TreeMapNode,System.Windows.Thickness)">
            <summary>
            Subdivides the parent rectangle using squaring tree map algorithm into
            rectangles with areas specified by the children. The areas must add up 
            to at most the area of the rectangle.
            </summary>
            <param name="parentRectangle">Total area being split.</param>
            <param name="parentNode">The node associated with the total area. The 
            children of this node will be allocated small chunks of the parent rectangle.</param>
            <param name="margin">How much of a gap should be left between the parent rectangle and the children.</param>
            <returns>A list of RectangularArea objects describing areas associated with each of the children of parentNode.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.BuildTreeMap">
            <summary>
            This function returns an IEnumerable over the rectangles associated with the children,
            as divided using the tree map algorithm.
            </summary>
            <returns>A list of RectangularArea objects describing areas associated with each of the children.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.BuildTreeMapStep">
            <summary>
            Performs one step of the body of the squaring tree map algorithm.
            </summary>
            <returns>List of rectangles calculated by this step.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.GetArea(System.Int32)">
            <summary>
            Returns the calculated area of the node at the given index.
            </summary>
            <param name="i">Index of the node to consider.</param>
            <returns>Area of the node, calculated based on the node's value multiplied by the current factor.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.GetAspect(System.Int32,System.Double)">
            <summary>
            Returns the aspect ratio of the area associated with the node at the given index.
            </summary>
            <param name="i">Index of the node to consider.</param>
            <param name="wh">Width of the area.</param>
            <returns>Positive supra-unitary ratio of the given area.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapNode">
            <summary>
            Holds the information needed by the tree map layout algorithm, such as the area
            associated with this node and the list of children. The class also contains
            an DataContext object which is the real user context, and a reference to the UI
            container associated with this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Area">
            <summary>
            Gets or sets a value representing the area associated with this node.
            This value is relative to all the other values in the hierarchy; the layout
            algorithm will allocated a real area proportional to this value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Children">
            <summary>
            Gets or sets the list of children under this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.WeakEventListener">
            <summary>
            Gets or sets a value representing the WeakEventListener associated with the
            ItemsSource that created the children of this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.DataContext">
            <summary>
            Gets or sets a value representing a reference to the user's custom data object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Element">
            <summary>
            Gets or sets a value representing the associated Silverlight UI element.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.ItemDefinition">
            <summary>
            Gets or sets a value representing the TreeMapItemDefinition used to describe 
            properties of this item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.ChildItemPadding">
            <summary>
            Gets or sets a value representing the padding between this node and its children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Level">
            <summary>
            Gets or sets a value representing the level of this node in the tree (the
            root node is at level 0).
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_Axes_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the Chart&apos;s Axes property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_AxisLocationChanged_CantBeChangedToAutoWhenHostedInsideOfASeriesHost">
            <summary>
              Looks up a localized string similar to Axis location cannot be changed to auto when hosted inside of a series host..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_Series_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the Chart&apos;s Series property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesDropTarget_set_Content_ContentMustBeAChart">
            <summary>
              Looks up a localized string similar to The content property must be set to a Chart object..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_GetAxes_AssignedDependentAxisCannotBeUsed">
            <summary>
              Looks up a localized string similar to Assigned dependent axis cannot be used. This may be due to an unset Orientation property for the axis or a type mismatch between the values being plotted and those supported by the axis..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_GetAxes_AssignedIndependentAxisCannotBeUsed">
            <summary>
              Looks up a localized string similar to Assigned independent axis cannot be used. This may be due to an unset Orientation property for the axis..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_NoSuitableAxisAvailableForPlottingDependentValue">
            <summary>
              Looks up a localized string similar to No suitable axis is available for plotting the dependent value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_ThisSeriesDoesNotSupportRadialAxes">
            <summary>
              Looks up a localized string similar to This series does not support radial axes..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DefinitionSeries_EnsureAxes_MissingDependentValueBinding">
            <summary>
              Looks up a localized string similar to A SeriesDefinition does not have its DependentValueBinding or DependentValuePath properties set; unable to determine the source for dependent values. Please use either of these properties to identify the data model property corresponding to the dependent values..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DefinitionSeries_EnsureAxes_MissingIndependentValueBinding">
            <summary>
              Looks up a localized string similar to A SeriesDefinition does not have its IndependentValueBinding or IndependentValuePath properties set; unable to determine the source for independent values. Please use either of these properties to identify the data model property corresponding to the independent values..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DefinitionSeries_SeriesDefinitions_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the SeriesDefinitions property of a DefinitionSeries is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DisplayAxis_GetLength_CannotDetermineTheLengthOfAnAxisWithAnOrientationOfNone">
            <summary>
              Looks up a localized string similar to Cannot determine the size of an axis without an orientation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.EdgePanel_OnEdgePropertyChanged">
            <summary>
              Looks up a localized string similar to Attempt to set Edge property to an invalid value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Interpolator_IncludeInRange_DataRangeBindingNotIConvertible">
            <summary>
              Looks up a localized string similar to The DataRangeBinding property of the Interpolator must be bound to an IConvertible object..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ctor_MaximumValueMustBeLargerThanOrEqualToMinimumValue">
            <summary>
              Looks up a localized string similar to The maximum value must be larger than or equal to the minimum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_get_Maximum_CannotReadTheMaximumOfAnEmptyRange">
            <summary>
              Looks up a localized string similar to &quot;Cannot read the Maximum of an empty range.&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_get_Minimum_CannotReadTheMinimumOfAnEmptyRange">
            <summary>
              Looks up a localized string similar to &quot;Cannot read the Minimum of an empty range.&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ToString_Data">
            <summary>
              Looks up a localized string similar to [{0},{1}].
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ToString_NoData">
            <summary>
              Looks up a localized string similar to No Data..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.RangeAxis_MaximumValueMustBeLargerThanOrEqualToMinimumValue">
            <summary>
              Looks up a localized string similar to The maximum value must be larger than or equal to the minimum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.RangeAxis_MinimumValueMustBeLargerThanOrEqualToMaximumValue">
            <summary>
              Looks up a localized string similar to The minimum value must be smaller than or equal to the maximum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.ReadOnlyObservableCollection_CollectionIsReadOnly">
            <summary>
              Looks up a localized string similar to Collection is read-only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.ResourceDictionaryEnumerator_CantResetEnumeratorResetDispenserInstead">
            <summary>
              Looks up a localized string similar to Cannot reset a ResourceDictionaryEnumerator; reset the ResourceDictionaryDispenser instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Series_OnGlobalSeriesIndexPropertyChanged_UntitledSeriesFormatString">
            <summary>
              Looks up a localized string similar to Series {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Series_SeriesHost_SeriesHostPropertyNotNull">
            <summary>
              Looks up a localized string similar to A series cannot be added to more than one series host..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.SeriesDefinition_SeriesHost_InvalidParent">
            <summary>
              Looks up a localized string similar to A SeriesDefinition instance&apos;s SeriesHost property may only be set to an instance of the DefinitionSeries class; other SeriesHost types are not supported..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.SeriesHostAxesCollection_InvalidAttemptToRemovePermanentAxisFromSeriesHost">
            <summary>
              Looks up a localized string similar to Invalid attempt to remove permanent axis from axis collection..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.SeriesHostAxesCollection_RemoveItem_AxisCannotBeRemovedFromASeriesHostWhenOneOrMoreSeriesAreListeningToIt">
            <summary>
              Looks up a localized string similar to An axis cannot be removed from a series host when one or more hosted series is listening to it..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.TreeMap_BuildTreeMapTree_TemplateNotSet">
            <summary>
              Looks up a localized string similar to Either ItemTemplate must be set or TreeMapItemDefinitionSelector must return a non-null template..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.TreeMap_CreateChildren_InterpolatorBindingNotSet">
            <summary>
              Looks up a localized string similar to The value of PropertyBinding property of an interpolator cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.TreeMap_Interpolators_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the TreeMap&apos;s Interpolators Property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.UniqueObservableCollection_InvalidAttemptToInsertADuplicateItem">
            <summary>
              Looks up a localized string similar to Invalid attempt to insert a duplicate item..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.WeakReferenceBag`1">
            <summary>
            A bag of weak references to items.
            </summary>
            <typeparam name="T">The type of the item.</typeparam>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Items">
            <summary>
            Gets or sets the list of event listeners.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.#ctor">
            <summary>
            Initializes a new instance of the WeakEvent class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Add(`0)">
            <summary>
            Adds an item to the bag.
            </summary>
            <param name="item">The item to add to the bag.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Remove(`0)">
            <summary>
            Removes an item from the bag.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.GetEnumerator">
            <summary>
            Returns a sequence of the elements in the bag.
            </summary>
            <returns>A sequence of the elements in the bag.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a sequence of the elements in the bag.
            </summary>
            <returns>A sequence of the elements in the bag.</returns>
        </member>
        <member name="T:System.Windows.Controls.ColorExtensions">
            <summary>
            Contains extensions to Color structure for HSL  color mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.MaxColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Gets the color component (R,G or B) with maximal value.
            </summary>
            <param name="red">The red component value for the Color. Valid values are 0 through 255.</param>
            <param name="green">The green component value for the Color. Valid values are 0 through 255.</param>
            <param name="blue">The blue component value for the Color. Valid values are 0 through 255.</param>
            <returns>Component with maximal value.</returns>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.MinColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Gets the color component (R,G or B) with minimal value.
            </summary>
            <param name="red">The red component value for the Color. Valid values are 0 through 255.</param>
            <param name="green">The green component value for the Color. Valid values are 0 through 255.</param>
            <param name="blue">The blue component value for the Color. Valid values are 0 through 255.</param>
            <returns>Component with minimal value.</returns>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.GetHue(System.Windows.Media.Color)">
            <summary>
            The hue, in degrees, of the Color. 
            The hue is measured in degrees, ranging from 0.0 through 360.0, 
            in HSL  color space.
            </summary>
            <param name="color">The Color structure that this method uses.</param>
            <returns>
            The hue, in degrees, of the Color structure. The hue is 
            measured in degrees, ranging from 0.0 through 360.0, in HSL color 
            space.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.GetSaturation(System.Windows.Media.Color)">
            <summary>
            Gets the hue-saturation-brightness (HSL ) saturation value for the 
            Color structure.
            </summary>
            <param name="color">The Color structure that this method uses.</param>
            <returns>
            The saturation of the Color structure. The saturation ranges from 
            0.0 through 1.0, where 0.0 is grayscale and 1.0 is the most saturate.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.GetLightness(System.Windows.Media.Color)">
            <summary>
            Gets the hue-saturation-lightness (HSL) lightness value for the 
            Color structure.
            </summary>
            <param name="color">The Color structure that this method uses.</param>
            <returns>
            The brightness of the Color. The brightness ranges from 0.0 through 
            1.0, where 0.0 represents black and 1.0 represents white.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ColorExtensions.FromAhsl(System.Windows.Media.Color,System.Byte,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new color from HSL  parameters.
            </summary>
            <param name="color">The Color structure that this method uses.</param>
            <param name="a">The alpha component. Valid values are 0 through 255.</param>
            <param name="h">The hue component. Valid values are [0, 360).</param>
            <param name="s">The saturation component. Valid values are [0, 1].</param>
            <param name="l">The brightness component. Valid values are [0, 1].</param>
            <returns>A newly created color structure.</returns>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.EnumerableExtensions">
            <summary>
            A set of extension methods for the sequence class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.Iterate``1(``0,System.Func{``0,``0})">
            <summary>
            Produces a sequence of items using a seed value and iteration 
            method.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="value">The initial value.</param>
            <param name="next">The iteration function.</param>
            <returns>A sequence of items using a seed value and iteration 
            method.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepend an item to a sequence.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to append the item to.</param>
            <param name="value">The item to append to the sequence.</param>
            <returns>A new sequence.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Accepts two sequences and applies a function to the corresponding 
            values in the two sequences.
            </summary>
            <typeparam name="T0">The type of the first sequence.</typeparam>
            <typeparam name="T1">The type of the second sequence.</typeparam>
            <typeparam name="R">The return type of the function.</typeparam>
            <param name="enumerable0">The first sequence.</param>
            <param name="enumerable1">The second sequence.</param>
            <param name="func">The function to apply to the corresponding values
            from the two sequences.</param>
            <returns>A sequence of transformed values from both sequences.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.MaxOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the maximum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.MaxOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the maximum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the maximum value from.
            </param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.EnumerableExtensions.MinOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the minimum value from.
            </param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
